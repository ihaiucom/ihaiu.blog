syntax = "proto3";
message DTItemNum //
{
    int32 ItemId = 1;
    int32 ItemNum = 2;
}
message DTRewardRandom //
{
    int32 Weight = 1;
    int32 BindType = 2;
    int32 ItemId = 3;
    int32 ItemNum = 4;
}
message DTStoryNum //
{
    int32 Star = 1;
    int32 Num = 2;
}
message DTVector2 //
{
    float X = 1;
    float Y = 2;
}
message DTActorSkill //
{
    int32 GroupId = 1;
    int32 Lv = 2;
}
message DTActorStory //
{
    int32 Story = 1;
    int32 Lv = 2;
    int32 Property = 3;
}
message DTActorFeature //
{
    int32 Feature = 1;
    int32 Lv = 2;
    int32 Property = 3;
}
message DTActorCharacter //
{
    int32 Character = 1;
    int32 Lv = 2;
    int32 Property = 3;
}
message DTRandomInterval //
{
    int32 Num1 = 1;
    int32 Num2 = 2;
}
message DTShootType //
{
    int32 Shoottypeid = 1;
    int32 Rate = 2;
}
message DTStoryEffect //
{
    int32 Storyeffect = 1;
    int32 Rate = 2;
}
message DTBuildingReq //
{
    int32 Type = 1;
    int32 Level = 2;
}
message DTValue2 //
{
    int32 V1 = 1;
    int32 V2 = 2;
}
message DTValue3 //
{
    int32 V1 = 1;
    int32 V2 = 2;
    int32 V3 = 3;
}
message DTValue4 //
{
    int32 V1 = 1;
    int32 V2 = 2;
    int32 V3 = 3;
    int32 V4 = 4;
}
message DTDrop //
{
    int32 X = 1;
    float Y = 2;
}
message DTPerformActoin //
{
    int32 V1 = 1;
    int32 V2 = 2;
    int32 V3 = 3;
}
message DTPerformSpeak //
{
    int32 V1 = 1;
    int32 V2 = 2;
    int32 V3 = 3;
}
message DTParts //
{
    string V1 = 1;
    string V2 = 2;
}
message DTProficiency //
{
    int32 V1 = 1;
    int32 V2 = 2;
}
message DTDate //
{
    int32 Y = 1;
    int32 M = 2;
    int32 D = 3;
}
message DTTime //
{
    int32 H = 1;
    int32 Mm = 2;
    int32 S = 3;
}
message DTDateTime //
{
    int32 Y = 1;
    int32 M = 2;
    int32 D = 3;
    int32 H = 4;
    int32 Mm = 5;
    int32 S = 6;
}
message DTFixItemNum //
{
    int32 BindType = 1;
    int32 ItemId = 2;
    int32 ItemNum = 3;
}
message DTGiftNum //
{
    int32 ItemId = 1;
    int32 ItemNum = 2;
    int32 Property = 3;
}
message DTLabelProperty //
{
    int32 StoryTag = 1;
    int32 Property = 2;
}
message DTInitialLabel //
{
    int32 StoryTag = 1;
    int32 Level = 2;
    int32 Property = 3;
}
message DTPerformanceCondition //
{
    int32 Lv = 1;
    int32 Property = 2;
    int32 Num = 3;
}
message DTSkillTiggerCondition //
{
    int32 TiggerConditon = 1;
    int32 TiggerValue = 2;
}
message DTburstlibrary //
{
    int32 ItemId = 1;
    int32 ItemNum = 2;
    int32 Rate = 3;
}
message DTProp //
{
    int32 PropID = 1;
    int32 Rate = 2;
}
message DTRandNum //
{
    int32 Num = 1;
    int32 Rate = 2;
}
message DTPropGrowupStep //
{
    int32 Level = 1;
    int32 Step = 2;
}
message DTDecompose //
{
    int32 Percent = 1;
    int32 Rewardid = 2;
}
message DTStarReward //
{
    int32 Level = 1;
    int32 Starnum = 2;
    int32 Rewardid = 3;
}
message DTBuffId //
{
    int32 BuffID1 = 1;
    int32 BuffID2 = 2;
    int32 BuffID3 = 3;
    int32 BuffID4 = 4;
    int32 BuffID5 = 5;
    int32 BuffID6 = 6;
}
message DTPropValue //
{
    int32 PropID = 1;
    int32 Value = 2;
}
message DTMapId //
{
    int32 ChapterId = 1;
    int32 MapId = 2;
}
message DTRandomMap //
{
    int32 Part = 1;
    int32 MapNum = 2;
}
message DTRewardRate //
{
    int32 Rate = 1;
    int32 Rewardid = 2;
}
message DTGashaponReward //
{
    int32 Gashaponid = 1;
    int32 Times = 2;
    int32 Rewardid = 3;
}
message DTReward //
{
    int32 Itemid = 1;
    int32 ItemNum = 2;
    int32 Rate = 3;
}
message DTAddSkillLevel //
{
    int32 SkillId = 1;
    int32 AddLevel = 2;
}
message DTAmountOfMoney //
{
    int32 MoneyType = 1;
    int32 MoneyNum = 2;
}
message DTStrengthenPara //
{
    int32 StrengthenLevel = 1;
    int32 Para = 2;
}
message DTReleaseType //
{
    int32 Release = 1;
    float Time = 2;
}
message DTWeight //
{
    int32 SectionId = 1;
    int32 Weight = 2;
}
message DTTrySkill //
{
    int32 HeroId = 1;
    int32 SkillId = 2;
}
message DTGroupRewardRandom //
{
    int32 Group = 1;
    int32 Weight = 2;
    int32 BindType = 3;
    int32 ItemId = 4;
    int32 ItemNum = 5;
}
message DTTaskByHeroType //
{
    int32 HeroId = 1;
    int32 TaskId = 2;
}
message DTRewardTask //
{
    int32 BindType = 1;
    int32 ItemId = 2;
    int32 ItemNum = 3;
}
message DTFriendGiveRewards //
{
    int32 MoneyId = 1;
    int32 MoneyNum = 2;
}
message DTRandomProp //
{
    int32 Weight = 1;
    float MinRatio = 2;
    float MaxRatio = 3;
}
message DTAttribute //
{
    int32 PvpSceneid = 1;
    int32 BalanceBag = 2;
}
message DTFixed //
{
    int32 PropID = 1;
    int32 Value = 2;
}
message DTPercentage //
{
    int32 PropID = 1;
    int32 Rate = 2;
}
message DTShopLimit //
{
    int32 LimitType = 1;
    int32 LimitNum = 2;
}
message DTShopItem //
{
    int32 BindType = 1;
    int32 ItemId = 2;
}
message DTStrengthenScore //
{
    int32 StrengthenLevel = 1;
    int32 StrengthenScore = 2;
}
message DTAutomaticCharging //
{
    int32 Initialfrequency = 1;
    int32 Chargingtime = 2;
}
message DTSkillSetting //
{
    int32 Prop = 1;
    int32 SkillId = 2;
    int32 Front = 3;
    int32 Back = 4;
    int32 Top = 5;
    int32 Down = 6;
    int32 Priority = 7;
}
message DTUnlock //
{
    int32 Unlockype = 1;
    int32 UnlockValue = 2;
}
message DTPropDamegeGrowth //
{
    string PropDamegeGrowth = 1;
}
message DTDungeonCost //
{
    int32 ItemId = 1;
    int32 ItemNum = 2;
}
message DTSetlist //
{
    int32 ValueMin = 1;
    int32 ValueMax = 2;
}
message DTPerChapterId //
{
    int32 ChapterId = 1;
    int32 SectionListId = 2;
    int32 Deefid = 3;
}
message DTPropGrowth //
{
    string GrowthParamString = 1;
}
message DTAuction //
{
    string ItemType = 1;
    int32 Value = 2;
}
message DtBuffAudio //
{
    int32 Birth = 1;
    int32 ID = 2;
    int32 Loop = 3;
}
message DtBuffEffect //
{
    int32 Birth = 1;
    string ID = 2;
    int32 Loop = 3;
}
message DTSuitProp //
{
    int32 Num = 1;
    int32 PropId = 2;
}
message DTEquipMaster //
{
    float Quality = 1;
    float PartGrowth = 2;
    float PartAmend = 3;
}
message DTItemUse //
{
    int32 Type = 1;
    int32 Param = 2;
}
message DTWay //
{
    int32 Module = 1;
    int32 Id = 2;
}
message DTChanceRange //
{
    int32 Chance = 1;
    int32 Downinterval = 2;
    int32 Upinterval = 3;
}
message DTRefineProperty //
{
    int32 BasePercent = 1;
    int32 PerfectPercent = 2;
}
message DTDropWeight //
{
    int32 DropId = 1;
    int32 Weight = 2;
}
message DTMonsterGroupWeight //
{
    int32 MonsterGroupId = 1;
    int32 Weight = 2;
}
message DTDropIdFixWeight //
{
    int32 MonsterGroupId = 1;
    int32 ItemId = 2;
    int32 Weight = 3;
}
message DTDropQualityFixWeight //
{
    int32 MonsterGroupId = 1;
    int32 Quality = 2;
    int32 Weight = 3;
}
message DTSpillarWeight //
{
    int32 SpillarId = 1;
    int32 Weight = 2;
}
message DTJobDropWeight //
{
    int32 JobId = 1;
    int32 Weight = 2;
}
message DTJTaskDropWeight //
{
    int32 TaskId = 1;
    int32 Weight = 2;
}
message Arena //Arena
{
    int32 id = 1;
    string rankName = 2;
    string ranklevel = 3;
    int32 avatarId = 4;
    int32 Upgrade = 5;
    DTFixItemNum showReward = 6;
    repeated DTFixItemNum Reward = 7;
    int32 inheritRank = 8;
}
message CacheTime //Arena
{
    int32 id = 1;
    int32 queueSize = 2;
    int32 reduceTime = 3;
}
message MatchingRange //Arena
{
    int32 id = 1;
    int32 waitingTime = 2;
    int32 Range = 3;
}
message Auction //Auction
{
    int32 id = 1;
    int32 level = 2;
    int32 top = 3;
    string name = 4;
    repeated DTAuction ToItem = 5;
    repeated int32 ColorFilter = 6;
    repeated DTValue2 LevelFilter = 7;
}
message Audio //Audio
{
    int32 id = 1;
    string name = 2;
    string path = 3;
    string desc = 4;
    int32 loop = 5;
    int32 volume = 6;
}
message Bgm //Audio
{
    int32 id = 1;
    string name = 2;
    string path = 3;
    string desc = 4;
    int32 loop = 5;
    int32 volume = 6;
}
message AudioBattle //AudioBattle
{
    int32 id = 1;
    int32 group = 2;
    string name = 3;
    repeated string path = 4;
    int32 prio = 5;
    float volume = 6;
    int32 rand = 7;
    int32 loop = 8;
    int32 Duration = 9;
}
message BeHitAudio //AudioBattle
{
    int32 id = 1;
    int32 weaponType = 2;
    int32 armorType = 3;
    string audioDoc = 4;
    string dec = 5;
    int32 time = 6;
}
message Avatar //Avatar
{
    int32 id = 1;
    string zhCnName = 2;
    string zhCnIcon = 3;
    string zhCnHeadicon = 4;
    string zhCnSecondaryicon = 5;
    string battleheadicon = 6;
    string drawing = 7;
    string zhCnNameicon = 8;
    string basicName = 9;
    string basicNameSelected = 10;
    string gameName = 11;
    string basicNameDec = 12;
    string model = 13;
    string dropItemModel = 14;
    int32 equipModel = 15;
    string introVideo = 16;
    string video = 17;
    string bigDrawing = 18;
    string spine = 19;
    repeated int32 herospinepos = 20;
    repeated float herospinescale = 21;
    string littlename = 22;
    string jobIcon = 23;
}
message UnitPrefab //Avatar
{
    int32 id = 1;
    string prefabName = 2;
    int32 titleHeight = 3;
    int32 modelHeight = 4;
}
message Resource //Avatar
{
    int32 id = 1;
    string path = 2;
}
message WeaponAvatar //Avatar
{
    int32 id = 1;
    int32 weaponPrefabRight = 2;
    int32 weaponPrefabLeft = 3;
}
message WeaponPrefab //Avatar
{
    int32 id = 1;
    string modelPath = 2;
    string effectPath = 3;
}
message HaloAvatar //Avatar
{
    int32 id = 1;
    string name = 2;
    string eff = 3;
}
message ItemQualityRes //Avatar
{
    int32 id = 1;
    string effectPath = 2;
    int32 audioPath = 3;
}
message Bag //Bag
{
    int32 id = 1;
    int32 bagCeiling = 2;
    int32 bagFloor = 3;
    repeated DTAmountOfMoney cost = 4;
    string zhCnString = 5;
    int32 bagFullStringDuration = 6;
    int32 bagFullStringCd = 7;
    int32 arrangeCoolTime = 8;
}
message BalanceHero //Balance
{
    int32 id = 1;
    string heroName = 2;
    repeated DTAttribute attribute = 3;
}
message BalanceBag //Balance
{
    int32 id = 1;
    repeated DTFixed balanceProperty = 2;
    repeated DTPercentage balancePercentage = 3;
}
message BattleTips //BattleTips
{
    int32 ID = 1;
    int32 Avatar = 2;
    string Content = 3;
    bool ChangeRoomClose = 4;
    bool IsForce = 5;
    int32 ForceParam = 6;
}
message Buff //Buff
{
    int32 id = 1;
    string Name = 2;
    string Description = 3;
    int32 Type = 4;
    int32 WorkType = 5;
    bool DispelType = 6;
    repeated int32 DispelWorkType = 7;
    int32 BuffShaderType = 8;
    int32 BuffClip = 9;
    string HeadName = 10;
    repeated int32 BirthAudio = 11;
    repeated int32 BirthEffect = 12;
    repeated int32 StateChange = 13;
    repeated int32 AbilityChange = 14;
    int32 TargetState = 15;
    bool IsClipBUFF = 16;
    int32 TimeInterval = 17;
    int32 Overlay = 18;
    int32 OverlayLimit = 19;
    bool IsQuickPressSupport = 20;
    repeated int32 UseSkillIDs = 21;
    repeated int32 TriggerBuffInfoIDs = 22;
    repeated int32 MechanismID = 23;
    repeated int32 SummonID = 24;
    int32 BuffSpeech = 25;
    bool NotShowTopText = 26;
    int32 ElementType = 27;
    DTPropDamegeGrowth EnhanceWind = 28;
    DTPropDamegeGrowth EnhanceThunder = 29;
    DTPropDamegeGrowth EnhanceWater = 30;
    DTPropDamegeGrowth EnhanceFire = 31;
    DTPropDamegeGrowth EnhanceSoil = 32;
    DTPropDamegeGrowth DefWind = 33;
    DTPropDamegeGrowth DefThunder = 34;
    DTPropDamegeGrowth DefWater = 35;
    DTPropDamegeGrowth DefFire = 36;
    DTPropDamegeGrowth DefSoil = 37;
    DTPropDamegeGrowth RecoverMaxHp = 38;
    DTPropDamegeGrowth RecoverMaxMp = 39;
    DTPropDamegeGrowth RecoverMaxHpPer = 40;
    DTPropDamegeGrowth RecoverMaxMpPer = 41;
    DTPropDamegeGrowth RecoverCurrentHpPer = 42;
    DTPropDamegeGrowth RecoverCurrentMpPer = 43;
    DTPropDamegeGrowth Strength = 44;
    DTPropDamegeGrowth Intelligence = 45;
    DTPropDamegeGrowth Power = 46;
    DTPropDamegeGrowth Spirit = 47;
    DTPropDamegeGrowth StrengthP = 48;
    DTPropDamegeGrowth IntelligenceP = 49;
    DTPropDamegeGrowth PowerP = 50;
    DTPropDamegeGrowth SpiritP = 51;
    DTPropDamegeGrowth MaxHp = 52;
    DTPropDamegeGrowth MaxMp = 53;
    DTPropDamegeGrowth MaxHpP = 54;
    DTPropDamegeGrowth MaxMpP = 55;
    DTPropDamegeGrowth HpAddTime = 56;
    DTPropDamegeGrowth MpAddTime = 57;
    DTPropDamegeGrowth Patt = 58;
    DTPropDamegeGrowth Matt = 59;
    DTPropDamegeGrowth FixAtt = 60;
    DTPropDamegeGrowth Pdef = 61;
    DTPropDamegeGrowth Mdef = 62;
    DTPropDamegeGrowth AttSpeedP = 63;
    DTPropDamegeGrowth CastSpeedP = 64;
    DTPropDamegeGrowth MoveSpeedP = 65;
    DTPropDamegeGrowth Pcrit = 66;
    DTPropDamegeGrowth Mcrit = 67;
    DTPropDamegeGrowth Hit = 68;
    DTPropDamegeGrowth Dodge = 69;
    DTPropDamegeGrowth Rigidity = 70;
    DTPropDamegeGrowth Stiff = 71;
    DTPropDamegeGrowth DefElectricity = 72;
    DTPropDamegeGrowth DefBlood = 73;
    DTPropDamegeGrowth DefBurn = 74;
    DTPropDamegeGrowth DefPoision = 75;
    DTPropDamegeGrowth DefBlind = 76;
    DTPropDamegeGrowth DefChaos = 77;
    DTPropDamegeGrowth DefSlow = 78;
    DTPropDamegeGrowth DefCurse = 79;
    DTPropDamegeGrowth DefShackles = 80;
    DTPropDamegeGrowth DefDizziness = 81;
    DTPropDamegeGrowth DefStone = 82;
    DTPropDamegeGrowth DefFrozen = 83;
    DTPropDamegeGrowth DefSleep = 84;
    DTPropDamegeGrowth PcritDamage = 85;
    DTPropDamegeGrowth McritDamage = 86;
    DTPropDamegeGrowth PattP = 87;
    DTPropDamegeGrowth MattP = 88;
    DTPropDamegeGrowth FixAttP = 89;
    DTPropDamegeGrowth PdefP = 90;
    DTPropDamegeGrowth MdefP = 91;
    DTPropDamegeGrowth PattNodefP = 92;
    DTPropDamegeGrowth MattNodefP = 93;
    DTPropDamegeGrowth ExtraFixedDamag = 94;
    DTPropDamegeGrowth ExtraDamag = 95;
    DTPropDamegeGrowth FixedDamagAdd = 96;
    DTPropDamegeGrowth DamagAdd = 97;
    DTPropDamegeGrowth FixedDamageReduce = 98;
    DTPropDamegeGrowth DamageReduce = 99;
    DTPropDamegeGrowth ReflectDamage = 100;
    DTPropDamegeGrowth FixedReflectDamage = 101;
    DTPropDamegeGrowth SkillLevel = 102;
    DTPropDamegeGrowth SkillHpCostAdd = 103;
    DTPropDamegeGrowth SkillMpCostAdd = 104;
    DTPropDamegeGrowth SkillMpCostAddP = 105;
    DTPropDamegeGrowth SkillItemCostAdd = 106;
    DTPropDamegeGrowth SkillCooldownAdd = 107;
    DTPropDamegeGrowth SkillCooldownAddP = 108;
    DTPropDamegeGrowth SkillSpeedAddFactor = 109;
    DTPropDamegeGrowth SkillHitRateAdd = 110;
    DTPropDamegeGrowth SkillCriticalHitRateAdd = 111;
    DTPropDamegeGrowth SkillAttackAddRate = 112;
    DTPropDamegeGrowth SkillAttackAdd = 113;
    DTPropDamegeGrowth SkillAttackAddFix = 114;
    DTPropDamegeGrowth SkillHardAddRate = 115;
    DTPropDamegeGrowth SkillChargeReduceRate = 116;
    int32 needShowUIBar = 117;
}
message BuffInfo //Buff
{
    int32 id = 1;
    string Description = 2;
    repeated int32 BuffID = 3;
    DTPropDamegeGrowth Buffprobability = 4;
    DTPropDamegeGrowth Bufftime = 5;
    DTPropDamegeGrowth Bufflevel = 6;
    DTPropDamegeGrowth BuffCD = 7;
    int32 BuffTarget = 8;
    int32 BuffTargetRadius = 9;
    repeated int32 SkillType = 10;
    repeated int32 SkillID = 11;
    int32 BuffCondition = 12;
    int32 BuffDelay = 13;
    repeated int32 ConditionEffect = 14;
    repeated int32 ConditionSkillType = 15;
    repeated int32 ConditionSkillID = 16;
    int32 DoAttackTimeRate = 17;
    DTPropDamegeGrowth DefAttck = 18;
}
message CameraShake //CameraShake
{
    int32 id = 1;
    string Des = 2;
    float XScale = 3;
    float Yscale = 4;
    int32 AllTime = 5;
    int32 TimeOneTimes = 6;
    float Reduction = 7;
}
message ChapterList //Chapter
{
    int32 id = 1;
    string name = 2;
    int32 type = 3;
    string dec = 4;
    int32 order = 5;
    repeated int32 sectionId = 6;
    string chapterdrawing = 7;
    string nameicon = 8;
    string titleicon = 9;
}
message SectionList //Chapter
{
    int32 id = 1;
    string name = 2;
    repeated int32 showSceneId = 3;
    string icon = 4;
    string nameicon = 5;
    string dec = 6;
    int32 showLevel = 7;
    string recommendLevel = 8;
}
message DifficultyList //Chapter
{
    int32 id = 1;
    string name = 2;
    string dec = 3;
    string hardDec = 4;
    int32 preSence = 5;
    int32 difId = 6;
    repeated int32 mapID = 7;
    repeated int32 UnlockPreDiff = 8;
    int32 UnlockPreLevel = 9;
    repeated int32 UnlockPreMission = 10;
    int32 ChapterFun = 11;
    int32 ChapterCon = 12;
    string tips = 13;
    repeated DTItemNum goodDropShow = 14;
    repeated DTItemNum prefectDropShow = 15;
    repeated DTItemNum rewardShow = 16;
    string energyCostTips = 17;
    int32 CustomsExp = 18;
    repeated int32 normalMonsterDrop = 19;
    repeated int32 highMonsterDrop = 20;
    repeated int32 bossMonsterDrop = 21;
    repeated int32 destructibleRewardDrop = 22;
    repeated int32 goldMonsterDrop = 23;
    repeated DTDropWeight abyssDrop = 24;
    repeated int32 cardReward = 25;
    repeated int32 highCardReward = 26;
    DTAmountOfMoney highCardCost = 27;
    repeated int32 monthCardReward = 28;
    repeated int32 CustomsReward = 29;
    repeated int32 rewardAdd = 30;
    int32 HardAdaptType = 31;
    int32 MaxHardAdaptType = 32;
}
message ChapterFun //Chapter
{
    int32 id = 1;
    int32 relive = 2;
    int32 reliveEnum = 3;
    repeated int32 reliveParam = 4;
    int32 reliveTime = 5;
    int32 Score = 6;
    repeated int32 ScoreEnum = 7;
    repeated int32 ScoreParam = 8;
    int32 Team = 9;
    int32 TeamEnum = 10;
    repeated int32 TeamParam = 11;
    int32 IsCountdown = 12;
    int32 IsSectionCountdown = 13;
    int32 sectionCountdownSecond = 14;
}
message ChapterCon //Chapter
{
    int32 id = 1;
    repeated int32 strengthEnum = 2;
    repeated int32 strengthParam = 3;
    int32 challenge = 4;
    int32 ygTicket = 5;
    int32 syTicket = 6;
}
message PvpScene //Chapter
{
    int32 id = 1;
    int32 sceneId = 2;
}
message ChapterReward //Chapter
{
    int32 id = 1;
    int32 diffId = 2;
    int32 groupId = 3;
    repeated DTGroupRewardRandom bossRewardDrop = 4;
}
message GamePlay //Chapter
{
    int32 id = 1;
    string des = 2;
    int32 sectionID = 3;
    int32 level = 4;
    int32 itemID = 5;
    int32 totalReward = 6;
    int32 guaranteedRewardPercent = 7;
    int32 killNormalMonsterRewardPercent = 8;
    int32 killDestructibleRewardPercent = 9;
    int32 killBossRewardPercent = 10;
    int32 bossHpGoldPercent = 11;
}
message AbyssChapter //Chapter
{
    int32 id = 1;
    string name = 2;
    repeated int32 common = 3;
    repeated int32 adventure = 4;
    repeated int32 warrior = 5;
    repeated int32 king = 6;
    string icon = 7;
    string nameicon = 8;
    string dec = 9;
    repeated int32 showLevel = 10;
}
message Abysspillar //Chapter
{
    int32 id = 1;
    repeated DTSpillarWeight preference = 2;
}
message ChapterRewardGuaranteed //Chapter
{
    int32 id = 1;
    string name = 2;
    int32 chapterType = 3;
    int32 rewardType = 4;
    repeated int32 guarantedCount = 5;
    int32 forwardRewardCount = 6;
    int32 dropId = 7;
    int32 refreshType = 8;
}
message Chat //Chat
{
    int32 id = 1;
    string zhCnName = 2;
    bool isShowSetting = 3;
    bool isSpeak = 4;
    int32 level = 5;
    int32 Interval = 6;
    int32 wordLimit = 7;
    bool menuInitialize = 8;
    bool changeMenuInitialize = 9;
    int32 unlockId = 10;
}
message QuickMessage //Chat
{
    int32 id = 1;
    int32 type = 2;
    int32 avatarid = 3;
    string zhCnMessage = 4;
    string indexes = 5;
}
message Emoji //Chat
{
    int32 id = 1;
    string zhCnName = 2;
    string emojiIcon = 3;
}
message NameColor //Color
{
    int32 id = 1;
    string name = 2;
    string color = 3;
}
message Description //Description
{
    int32 id = 1;
    int32 menuId = 2;
    int32 menuIndexId = 3;
    string des = 4;
}
message DestructibleProp //Destructible
{
    int32 id = 1;
    int32 destructibleId = 2;
    string name = 3;
    string desc = 4;
    int32 Camp = 5;
    int32 modeId = 6;
    int32 avatarid = 7;
    repeated int32 beHitType = 8;
    int32 idleCount = 9;
}
message Dropbackbag //Drop
{
    int32 id = 1;
    int32 dropId = 2;
    int32 dropNum = 3;
    int32 dorpType = 4;
    int32 itemId = 5;
    repeated int32 itemNum = 6;
    int32 weight = 7;
    DTJobDropWeight jobFixed = 8;
    int32 foreverDropTimes = 9;
    DTJTaskDropWeight taskFixed = 10;
}
message DropAudioEffect //Drop
{
    int32 id = 1;
    int32 quality = 2;
    int32 dropAudioID = 3;
    int32 pickAudioID = 4;
    int32 dropStartEffectID = 5;
    int32 dropEndEffectID = 6;
    int32 pickEffectID = 7;
}
message Effect //Effect
{
    int32 id = 1;
    string Description = 2;
    string Path = 3;
    int32 JoinId = 4;
    bool Loop = 5;
    int32 Duration = 6;
    int32 Scale = 7;
    repeated int32 Offset = 8;
}
message EnchantCardProp //Enchant
{
    int32 id = 1;
    string desc = 2;
    repeated int32 equipPlace = 3;
    int32 addPropPve = 4;
    int32 addPropPvp = 5;
}
message EnchantProp //Enchant
{
    int32 id = 1;
    string zhCnName = 2;
    repeated int32 PvebuffinfoID = 3;
    repeated int32 PveMechanismID = 4;
    repeated int32 PvpbuffinfoID = 5;
    repeated int32 PvpMechanismID = 6;
    int32 scoreadd = 7;
    string discrepadd = 8;
    int32 Patt = 9;
    int32 Matt = 10;
    int32 FixAtt = 11;
    int32 Pdef = 12;
    int32 Mdef = 13;
    float Strength = 14;
    float Intelligence = 15;
    float Power = 16;
    float Spirit = 17;
    int32 MaxHp = 18;
    int32 MaxMp = 19;
    int32 HpAddTime = 20;
    int32 MpAddTime = 21;
    int32 AttSpeedPer = 22;
    int32 CastSpeedPer = 23;
    int32 MoveSpeedPer = 24;
    int32 Pcrit = 25;
    int32 Mcrit = 26;
    int32 Hit = 27;
    int32 Dodge = 28;
    int32 ElementType = 29;
    int32 EnhanceWind = 30;
    int32 EnhanceThunder = 31;
    int32 EnhanceWater = 32;
    int32 EnhanceFire = 33;
    int32 EnhanceSoil = 34;
    int32 DefWind = 35;
    int32 DefThunder = 36;
    int32 DefWater = 37;
    int32 DefFire = 38;
    int32 DefSoil = 39;
    int32 DefElectricity = 40;
    int32 DefBlood = 41;
    int32 DefBurn = 42;
    int32 DefPoision = 43;
    int32 DefBlind = 44;
    int32 DefChaos = 45;
    int32 DefSlow = 46;
    int32 DefCurse = 47;
    int32 DefShackles = 48;
    int32 DefDizziness = 49;
    int32 DefStone = 50;
    int32 DefFrozen = 51;
    int32 DefSleep = 52;
    int32 allDef = 53;
    int32 DefMonster = 54;
    int32 Stiff = 55;
    int32 CityMoveSpeedPer = 56;
}
message EnchantCardCompound //Enchant
{
    int32 id = 1;
    string desc = 2;
    int32 quality = 3;
    int32 cardNum = 4;
    int32 dropId = 5;
    string showItemId = 6;
    int32 color = 7;
    int32 percentage = 8;
    DTItemNum cost = 9;
    DTItemNum costReplace = 10;
}
message EnchantDrop //Enchant
{
    int32 id = 1;
    int32 dropId = 2;
    int32 dropNum = 3;
    int32 dorpType = 4;
    int32 itemId = 5;
    repeated int32 itemNum = 6;
    int32 weight = 7;
}
message Entity //Entity
{
    int32 id = 1;
    DTPropDamegeGrowth Scale = 2;
    DTPropDamegeGrowth PVPScale = 3;
    DTPropDamegeGrowth ScaleZ = 4;
    DTPropDamegeGrowth PVPScaleZ = 5;
    bool IsTouchGround = 6;
    bool UseShadow = 7;
    repeated int32 ShadowScale = 8;
    int32 Duration = 9;
    repeated int32 BornMechanism = 10;
    int32 HurtType = 11;
    int32 GenRune = 12;
    string Name = 13;
    bool UseOwnerPos = 14;
    int32 BulletTargetType = 15;
}
message EntranceShow //EntranceShow
{
    int32 id = 1;
    int32 avatarId = 2;
    int32 type = 3;
    string path = 4;
    string namePath = 5;
    repeated int32 pos = 6;
    repeated float scale = 7;
}
message EquipProp //Equip
{
    int32 id = 1;
    string zhCnName = 2;
    repeated int32 PvebuffinfoID = 3;
    repeated int32 PveMechanismID = 4;
    repeated int32 PvpbuffinfoID = 5;
    repeated int32 PvpMechanismID = 6;
    int32 scoreadd = 7;
    string discrepadd = 8;
    int32 Patt = 9;
    int32 Matt = 10;
    int32 FixAtt = 11;
    int32 Pdef = 12;
    int32 Mdef = 13;
    float Strength = 14;
    float Intelligence = 15;
    float Power = 16;
    float Spirit = 17;
    int32 MaxHp = 18;
    int32 MaxMp = 19;
    int32 HpAddTime = 20;
    int32 MpAddTime = 21;
    int32 AttSpeedPer = 22;
    int32 CastSpeedPer = 23;
    int32 MoveSpeedPer = 24;
    int32 Pcrit = 25;
    int32 Mcrit = 26;
    int32 Hit = 27;
    int32 Dodge = 28;
    int32 ElementType = 29;
    int32 EnhanceWind = 30;
    int32 EnhanceThunder = 31;
    int32 EnhanceWater = 32;
    int32 EnhanceFire = 33;
    int32 EnhanceSoil = 34;
    int32 DefWind = 35;
    int32 DefThunder = 36;
    int32 DefWater = 37;
    int32 DefFire = 38;
    int32 DefSoil = 39;
    int32 DefElectricity = 40;
    int32 DefBlood = 41;
    int32 DefBurn = 42;
    int32 DefPoision = 43;
    int32 DefBlind = 44;
    int32 DefChaos = 45;
    int32 DefSlow = 46;
    int32 DefCurse = 47;
    int32 DefShackles = 48;
    int32 DefDizziness = 49;
    int32 DefStone = 50;
    int32 DefFrozen = 51;
    int32 DefSleep = 52;
    int32 allDef = 53;
    int32 DefMonster = 54;
    int32 Stiff = 55;
    int32 CityMoveSpeedPer = 56;
}
message EquipSuit //Equip
{
    int32 id = 1;
    string zhCnName = 2;
    repeated int32 suitList = 3;
    repeated DTSuitProp suitProp = 4;
}
message Enchantment //Equip
{
    int32 id = 1;
    int32 quality = 2;
    repeated float probability2 = 3;
    repeated float probability3 = 4;
    repeated float probability4 = 5;
    DTAmountOfMoney costMoney = 6;
}
message PlaceUnlock //Equip
{
    int32 id = 1;
    string zhCnName = 2;
    int32 unlockLevel = 3;
}
message RandomCost //Equip
{
    int32 id = 1;
    string zhCnName = 2;
    DTItemNum costItem = 3;
    DTAmountOfMoney costMoney = 4;
}
message Weapontype //Equip
{
    int32 id = 1;
    string zhCnName = 2;
    int32 AttSpeedPer = 3;
    string des = 4;
    int32 Rigidity = 5;
    int32 PSkillMPCostReduceP = 6;
    int32 PskillCDReduceP = 7;
    int32 MSkillMPCostReduceP = 8;
    int32 MskillCDReduceP = 9;
}
message StrengthenItem //Equip
{
    int32 id = 1;
    int32 StrengthenLevel = 2;
    float probability = 3;
}
message Package //Equip
{
    int32 id = 1;
    int32 quality = 2;
    int32 level = 3;
    DTItemNum packageCost = 4;
}
message EquipMaster //EquipMaster
{
    int32 id = 1;
    string name = 2;
    int32 heroid = 3;
    int32 quality = 4;
    int32 equipPart = 5;
    int32 equipType = 6;
    int32 isMaster = 7;
    DTEquipMaster Patt = 8;
    DTEquipMaster Matt = 9;
    DTEquipMaster FixAtt = 10;
    DTEquipMaster Pdef = 11;
    DTEquipMaster Mdef = 12;
    DTEquipMaster Strength = 13;
    DTEquipMaster Intelligence = 14;
    DTEquipMaster Power = 15;
    DTEquipMaster Spirit = 16;
    DTEquipMaster MaxHp = 17;
    DTEquipMaster MaxMp = 18;
    DTEquipMaster HpAddTime = 19;
    DTEquipMaster MpAddTime = 20;
    DTEquipMaster AttSpeedPer = 21;
    DTEquipMaster CastSpeedPer = 22;
    DTEquipMaster MoveSpeedPer = 23;
    DTEquipMaster Pcrit = 24;
    DTEquipMaster Mcrit = 25;
    DTEquipMaster Hit = 26;
    DTEquipMaster Dodge = 27;
    DTEquipMaster ElementType = 28;
    DTEquipMaster EnhanceWind = 29;
    DTEquipMaster EnhanceThunder = 30;
    DTEquipMaster EnhanceWater = 31;
    DTEquipMaster EnhanceFire = 32;
    DTEquipMaster EnhanceSoil = 33;
    DTEquipMaster DefWind = 34;
    DTEquipMaster DefThunder = 35;
    DTEquipMaster DefWater = 36;
    DTEquipMaster DefFire = 37;
    DTEquipMaster DefSoil = 38;
    DTEquipMaster DefElectricity = 39;
    DTEquipMaster DefBlood = 40;
    DTEquipMaster DefBurn = 41;
    DTEquipMaster DefPoision = 42;
    DTEquipMaster DefBlind = 43;
    DTEquipMaster DefChaos = 44;
    DTEquipMaster DefSlow = 45;
    DTEquipMaster DefCurse = 46;
    DTEquipMaster DefShackles = 47;
    DTEquipMaster DefDizziness = 48;
    DTEquipMaster DefStone = 49;
    DTEquipMaster DefFrozen = 50;
    DTEquipMaster DefSleep = 51;
    DTEquipMaster allDef = 52;
    DTEquipMaster DefMonster = 53;
    DTEquipMaster Stiff = 54;
    DTEquipMaster CityMoveSpeedPer = 55;
}
message Strengthen //EquipStrengthen
{
    int32 id = 1;
    string zhCnName = 2;
    int32 successProbability = 3;
    int32 failde = 4;
    int32 mend1 = 5;
    int32 mend1max = 6;
    int32 mend2 = 7;
    int32 mend2max = 8;
    int32 mend3 = 9;
    int32 mend3min = 10;
    int32 mend3times = 11;
}
message Strengthen_2 //EquipStrengthen
{
    int32 id = 1;
    repeated float mend2fix = 2;
}
message StrengthenCost //EquipStrengthen
{
    int32 id = 1;
    int32 equa = 2;
    int32 elevel = 3;
    int32 StrengthenLevel = 4;
    int32 equipPart = 5;
    DTItemNum costMoney = 6;
    repeated DTItemNum costItem = 7;
    repeated DTItemNum compensateItem = 8;
    repeated DTItemNum desItem = 9;
}
message Strengthenprop //EquipStrengthen
{
    int32 id = 1;
    int32 contype = 2;
    repeated int32 conpve = 3;
    repeated int32 conpvp = 4;
    repeated int32 con1 = 5;
    repeated int32 con2 = 6;
    repeated int32 con3 = 7;
}
message StrengthenTicket //EquipStrengthen
{
    int32 id = 1;
    string zhCnDesc = 2;
    int32 strengthenLevel = 3;
    int32 strengthenPro = 4;
    int32 strenTicketLv = 5;
    int32 strengthenfail = 6;
}
message Fashion //Fashion
{
    int32 id = 1;
    string desc = 2;
    int32 fashionPart = 3;
    int32 fashionType = 4;
    repeated int32 hangPoint = 5;
    repeated DTValue3 offset = 6;
    repeated int32 scale = 7;
    int32 fashionPropertyID = 8;
    int32 equipSuitID = 9;
    int32 resType = 10;
    string ResModel = 11;
    string ResMatrix = 12;
}
message FashionAttr //Fashion
{
    int32 id = 1;
    string desc = 2;
    int32 BaseFashionPropID = 3;
    repeated int32 FashionPropID = 4;
    int32 DefaultFashionPropID = 5;
}
message FashionProp //Fashion
{
    int32 id = 1;
    string zhCnName = 2;
    repeated int32 PvebuffinfoID = 3;
    repeated int32 PveMechanismID = 4;
    repeated int32 PvpbuffinfoID = 5;
    repeated int32 PvpMechanismID = 6;
    int32 scoreadd = 7;
    string discrepadd = 8;
    int32 Patt = 9;
    int32 Matt = 10;
    int32 FixAtt = 11;
    int32 Pdef = 12;
    int32 Mdef = 13;
    float Strength = 14;
    float Intelligence = 15;
    float Power = 16;
    float Spirit = 17;
    int32 MaxHp = 18;
    int32 MaxMp = 19;
    int32 HpAddTime = 20;
    int32 MpAddTime = 21;
    int32 AttSpeedPer = 22;
    int32 CastSpeedPer = 23;
    int32 MoveSpeedPer = 24;
    int32 Pcrit = 25;
    int32 Mcrit = 26;
    int32 Hit = 27;
    int32 Dodge = 28;
    int32 ElementType = 29;
    int32 EnhanceWind = 30;
    int32 EnhanceThunder = 31;
    int32 EnhanceWater = 32;
    int32 EnhanceFire = 33;
    int32 EnhanceSoil = 34;
    int32 DefWind = 35;
    int32 DefThunder = 36;
    int32 DefWater = 37;
    int32 DefFire = 38;
    int32 DefSoil = 39;
    int32 DefElectricity = 40;
    int32 DefBlood = 41;
    int32 DefBurn = 42;
    int32 DefPoision = 43;
    int32 DefBlind = 44;
    int32 DefChaos = 45;
    int32 DefSlow = 46;
    int32 DefCurse = 47;
    int32 DefShackles = 48;
    int32 DefDizziness = 49;
    int32 DefStone = 50;
    int32 DefFrozen = 51;
    int32 DefSleep = 52;
    int32 allDef = 53;
    int32 DefMonster = 54;
    int32 Stiff = 55;
    int32 CityMoveSpeedPer = 56;
}
message FashionSuit //Fashion
{
    int32 id = 1;
    string desc = 2;
    repeated int32 suitList = 3;
    repeated DTSuitProp suitProp = 4;
}
message FashionTitle //Fashion
{
    int32 id = 1;
    string zhCnName = 2;
    string pkgName = 3;
    string resName = 4;
}
message Formula //Formula
{
    int32 id = 1;
    string para = 2;
    string paraDes = 3;
    int32 value = 4;
    int32 para2 = 5;
}
message GMBase //GM
{
    int32 id = 1;
    string category = 2;
    string name = 3;
    string content = 4;
    string desc = 5;
}
message GMGroup //GM
{
    int32 id = 1;
    string tab = 2;
    string btnName = 3;
    repeated string gmList = 4;
    repeated string eventList = 5;
}
message Guide //Guide
{
    int32 id = 1;
    int32 groupId = 2;
    string note = 3;
    int32 triggerType = 4;
    int32 triggerTypeParameter = 5;
    int32 triggerScene = 6;
    int32 step = 7;
    bool keyStep = 8;
    repeated int32 preSteps = 9;
    int32 guideType = 10;
    repeated int32 guideButtons = 11;
    int32 dialogType = 12;
    string dialogText = 13;
    int32 audioId = 14;
    int32 finishType = 15;
    int32 finishParameter = 16;
}
message GuidePath //Guide
{
    int32 id = 1;
    int32 type = 2;
    int32 menuId = 3;
    repeated string classUrls = 4;
    repeated string clsNames = 5;
    repeated string uiHierarchy = 6;
}
message Hero //Hero
{
    int32 id = 1;
    string Name = 2;
    repeated int32 DefaultFashionids = 3;
    int32 DefaultWeaponSetId = 4;
    bool JobAttribute = 5;
    int32 JobType = 6;
    int32 Prejob = 7;
    bool Sex = 8;
    int32 OppositeSexJob = 9;
    bool Open = 10;
    bool CanCreateRole = 11;
    int32 AuctionJob = 12;
    int32 ComboFactor = 13;
    int32 Mode = 14;
    int32 RecProperty = 15;
    int32 RecDefence = 16;
    int32 Weight = 17;
    string InputConfigPath = 18;
    int32 MaxSkillPanelIndex = 19;
    repeated int32 AwakenSkills = 20;
    int32 ProJobSkill = 21;
    int32 PreJobDialogID = 22;
    int32 FightID = 23;
    repeated int32 ToJob = 24;
    int32 JumpAttackNum = 25;
    string AIConfig = 26;
    int32 asending = 27;
    int32 avatarid = 28;
    string defaultani = 29;
    int32 dafultAttack = 30;
    string touchani = 31;
    string herodec = 32;
    string herolocation = 33;
    int32 star = 34;
    int32 transferLevel = 35;
    int32 transferTask = 36;
    repeated int32 baseSkill = 37;
    string modelname = 38;
    int32 addSkillPoint = 39;
    repeated int32 showSkill = 40;
    int32 ActWarning = 41;
    int32 comboTime = 42;
    int32 blockGroundFriction = 43;
    int32 blockAttackX = 44;
}
message HeroProp //Hero
{
    int32 id = 1;
    string name = 2;
    int32 baselevel = 3;
    repeated int32 MaxHp = 4;
    repeated int32 MaxMp = 5;
    repeated float Strength = 6;
    repeated float Intelligence = 7;
    repeated float Power = 8;
    repeated float Spirit = 9;
    repeated int32 Patt = 10;
    repeated int32 Matt = 11;
    repeated int32 FixAtt = 12;
    repeated int32 Pdef = 13;
    repeated int32 Mdef = 14;
    repeated int32 Pcrit = 15;
    repeated int32 Mcrit = 16;
    repeated int32 HpAddTime = 17;
    repeated int32 MpAddTime = 18;
    repeated int32 EnhanceWind = 19;
    repeated int32 EnhanceThunder = 20;
    repeated int32 EnhanceWater = 21;
    repeated int32 EnhanceFire = 22;
    repeated int32 EnhanceSoil = 23;
    repeated int32 DefWind = 24;
    repeated int32 DefThunder = 25;
    repeated int32 DefWater = 26;
    repeated int32 DefFire = 27;
    repeated int32 DefSoil = 28;
    repeated int32 AttSpeed = 29;
    repeated int32 CastSpeed = 30;
    repeated int32 MoveSpeed = 31;
    repeated int32 Hit = 32;
    repeated int32 Dodge = 33;
    repeated int32 Stiff = 34;
    repeated int32 CityMoveSpeed = 35;
}
message Item //Item
{
    int32 id = 1;
    string zhCnName = 2;
    string zhCnItemDes = 3;
    int32 type = 4;
    int32 smallType = 5;
    int32 awardNumber = 6;
    int32 equipPart = 7;
    int32 equipType = 8;
    int32 avatarid = 9;
    int32 quality = 10;
    int32 dropItemEffectAndAudio = 11;
    DTItemUse itemUse = 12;
    int32 level = 13;
    int32 useLimit = 14;
    int32 maxNum = 15;
    int32 maxLimit = 16;
    bool isAbandon = 17;
    repeated int32 getWay = 18;
    int32 bagPlace = 19;
    int32 showSort = 20;
    int32 bindType = 21;
    int32 bindStatus = 22;
    bool canTrade = 23;
    DTTime limitTime = 24;
    DTDateTime periodTime = 25;
    bool canSeal = 26;
    int32 sealNum = 27;
    bool canStren = 28;
    int32 strenLv = 29;
    bool canEnchant = 30;
    bool canInsert = 31;
    bool decompose = 32;
    int32 refineLv = 33;
    repeated int32 hero = 34;
    string showHero = 35;
    repeated int32 recommendHero = 36;
    int32 equipProp = 37;
    int32 equipSuit = 38;
    repeated int32 equipPlace = 39;
    int32 chestID = 40;
    DTItemNum chestCost = 41;
    int32 strenTicketID = 42;
    int32 strenTicketLv = 43;
    int32 priceRec = 44;
    int32 priceMin = 45;
    int32 priceMax = 46;
    bool isTreasure = 47;
    int32 tradeCD = 48;
    int32 tradeNum = 49;
    bool canCopy = 50;
    bool canHandsel = 51;
    int32 popupType = 52;
    int32 value = 53;
    int32 tipsButton = 54;
    int32 cdType = 55;
    int32 cdTime = 56;
    string zhCnShowSmall = 57;
    DTItemNum price = 58;
}
message ItemTrade //Item
{
    int32 id = 1;
    int32 quailty = 2;
    int32 strengthenLevel = 3;
    int32 equipLevel = 4;
    int32 strengthenCost = 5;
}
message ObtainChannel //Item
{
    int32 id = 1;
    int32 Icon = 2;
    int32 channelType = 3;
    repeated int32 dateUI = 4;
    int32 rank = 5;
    string bz = 6;
}
message Tipsbutton //Itemlinshi
{
    int32 id = 1;
    string name = 2;
}
message TipsCombine //Itemlinshi
{
    int32 id = 1;
    repeated int32 name = 2;
    string dec = 3;
}
message Money //Itemlinshi
{
    int32 id = 1;
    string codeName = 2;
    string name = 3;
    int32 itemID = 4;
    int32 smallIcon = 5;
    string dec = 6;
    int32 isExchange = 7;
    int32 exbindPlatinum = 8;
    int32 exbindGold = 9;
    int32 exbindSilver = 10;
    repeated int32 getway = 11;
    int32 dropModel = 12;
}
message Energy //Itemlinshi
{
    int32 id = 1;
    string zhCnName = 2;
}
message TreasureBox //Itemlinshi
{
    int32 id = 1;
    int32 chestID = 2;
    int32 itemID = 3;
    string desc = 4;
    int32 num = 5;
    int32 weight = 6;
    int32 hero = 7;
    repeated int32 level = 8;
    int32 strengthLv = 9;
}
message Leaderboard //Leaderboard
{
    int32 id = 1;
    string name = 2;
    int32 crossArea = 3;
    string filterType = 4;
    repeated int32 filterList = 5;
    int32 refresh = 6;
    int32 reset = 7;
    int32 enterlimit = 8;
    int32 enterlimitNum = 9;
    int32 displayMax = 10;
    int32 MaxNum = 11;
    string tips = 12;
}
message Loader //Loader
{
    int32 id = 1;
    string name = 2;
    bool isShowCircle = 3;
}
message Loading //Loading
{
    int32 id = 1;
    int32 type = 2;
    string name = 3;
    repeated string text = 4;
    repeated int32 Avatar = 5;
}
message LoadingMap //Loading
{
    int32 id = 1;
    int32 type = 2;
    int32 indexes = 3;
    int32 linkId = 4;
    string zhCnMessage = 5;
}
message LoadingTips //Loading
{
    int32 id = 1;
    string message = 2;
    int32 type = 3;
}
message Mail //Mail
{
    int32 id = 1;
    string name = 2;
    int32 type = 3;
    float time = 4;
    string From = 5;
    string content = 6;
    repeated DTFixItemNum Reward = 7;
}
message MapList //MapList
{
    int32 id = 1;
    string zhCnName = 2;
    int32 type = 3;
    int32 openLevel = 4;
    int32 bgm = 5;
}
message MapNodeLink //MapList
{
    int32 id = 1;
    int32 transType = 2;
    int32 nodeA = 3;
    int32 nodeB = 4;
    int32 menuID = 5;
    int32 chapterID = 6;
}
message MapShow //MapList
{
    int32 id = 1;
    string zhCnName = 2;
    int32 type = 3;
    int32 openCondition = 4;
    repeated int32 mapping = 5;
}
message Mechanism //Mechanism
{
    int32 id = 1;
    string Description = 2;
    int32 Index = 3;
    int32 RemoveFlag = 4;
    string DescriptionA = 5;
    repeated int32 ValueA = 6;
    string DescriptionB = 7;
    repeated int32 ValueB = 8;
    string DescriptionC = 9;
    repeated int32 ValueC = 10;
    string DescriptionD = 11;
    repeated int32 ValueD = 12;
    string DescriptionE = 13;
    repeated int32 ValueE = 14;
    string DescriptionF = 15;
    repeated int32 ValueF = 16;
}
message Menu //Menu
{
    int32 id = 1;
    string zhCnName = 2;
    string icon = 3;
    string moduleNameIcon = 4;
    string moduleName = 5;
    int32 layer = 6;
    int32 screenFixType = 7;
    repeated int32 moneyList = 8;
    int32 closeOtherType = 9;
    bool closeHomeWindow = 10;
    bool isAutoOpenHomeWindow = 11;
    int32 cacheTime = 12;
    int32 loaderId = 13;
    int32 barType = 14;
    int32 barIndex = 15;
    int32 openAnimation = 16;
    int32 closeAnimation = 17;
    int32 redType = 18;
}
message MenuIndex //Menu
{
    int32 id = 1;
    string name = 2;
    int32 menuId = 3;
    int32 openType = 4;
    int32 menuIndex = 5;
    int32 redType = 6;
}
message PopBtn //Menu
{
    int32 id = 1;
    string icon = 2;
    string comment = 3;
}
message Monster //Monster
{
    int32 id = 1;
    int32 MonsterID = 2;
    string Name = 3;
    string Desc = 4;
    int32 MonsterMode = 5;
    int32 Type = 6;
    int32 IsShowPortrait = 7;
    int32 Camp = 8;
    int32 MonsterRace = 9;
    int32 Mode = 10;
    int32 avatarid = 11;
    int32 Weight = 12;
    int32 Scale = 13;
    int32 ColliderRadius = 14;
    float defendboxy = 15;
    int32 overHeadHeight = 16;
    int32 buffOriginHeight = 17;
    int32 MoveSpeedRatio = 18;
    int32 WalkAnimationSpeedPerent = 19;
    int32 IsNeedClear = 20;
    int32 FloatValue = 21;
    int32 ShowName = 22;
    int32 ShowHPBar = 23;
    int32 ShowFootBar = 24;
    repeated int32 AbilityChange = 25;
    repeated int32 BornBuff = 26;
    repeated int32 BornMechanism = 27;
    int32 Height = 28;
    int32 KeepBody = 29;
    repeated int32 shadowScale = 30;
    int32 AutoFightNeedAttackFirst = 31;
    int32 GetupBati = 32;
    int32 GetupSkillRand = 33;
    int32 GetupSkillID = 34;
    repeated int32 SkillIDs = 35;
    repeated int32 WalkSpeech = 36;
    int32 AttackSpeech = 37;
    int32 BirthSpeech = 38;
    int32 AIType = 39;
    int32 AIActionPath = 40;
    int32 AIDestinationSelectPath = 41;
    int32 AIEventPath = 42;
    int32 AIAttackDelay = 43;
    int32 AIDestinationChangeTerm = 44;
    int32 AIThinkTargetTerm = 45;
    repeated DTSkillSetting AIAttackKind = 46;
    int32 DazeTime = 47;
    int32 AIWarlike = 48;
    int32 maxFixHp = 49;
    int32 blockGroundFriction = 50;
    int32 blockAttackX = 51;
    int32 IdleProtectHpPer = 52;
    int32 AirProtectHpPer = 53;
    int32 LieProtectHpPer = 54;
}
message MonsterAI //Monster
{
    int32 id = 1;
    int32 AIType = 2;
    string Comment = 3;
    int32 AICombatType = 4;
    int32 AITargetType = 5;
    int32 AISight = 6;
    int32 AIChase = 7;
    int32 skIntMaxRunAwayDisX = 8;
    int32 skIntMaxRunAwayDisY = 9;
    int32 skIntKeepDisTableX = 10;
    int32 skIntKeepDisTableY = 11;
    int32 skIntFrontFaceAndZigZagYDis = 12;
    int32 AIIdleMode = 13;
    int32 AIWanderRange = 14;
    int32 AIWanderByTargetRange = 15;
    int32 AIWalkBackRange = 16;
}
message Monstervalue //Monster
{
    int32 id = 1;
    string Comment = 2;
    int32 MaxHpRatio = 3;
    int32 MaxMpRatio = 4;
    int32 HpAddTimeRatio = 5;
    int32 MpAddTimeRatio = 6;
    int32 PattRatio = 7;
    int32 MattRatio = 8;
    int32 PdefRatio = 9;
    int32 MdefRatio = 10;
    int32 PcritRatio = 11;
    int32 McritRatio = 12;
    int32 HitRatio = 13;
    int32 DodgeRatio = 14;
    int32 StiffRatio = 15;
    int32 StrengthRatio = 16;
    int32 IntelligenceRatio = 17;
    int32 PowerRatio = 18;
    int32 SpiritRatio = 19;
    int32 PattNodefRatio = 20;
    int32 MattNodefRatio = 21;
    int32 EnhanceWindRatio = 22;
    int32 EnhanceThunderRatio = 23;
    int32 EnhanceWaterRatio = 24;
    int32 EnhanceFireRatio = 25;
    int32 EnhanceSoilRatio = 26;
    int32 DefWindRatio = 27;
    int32 DefThunderRatio = 28;
    int32 DefWaterRatio = 29;
    int32 DefFireRatio = 30;
    int32 DefSoilRatio = 31;
    int32 DefElectricityRatio = 32;
    int32 DefBloodRatio = 33;
    int32 DefBurnRatio = 34;
    int32 DefPoisionRatio = 35;
    int32 DefBlindRatio = 36;
    int32 DefChaosRatio = 37;
    int32 DefSlowRatio = 38;
    int32 DefCurseRatio = 39;
    int32 DefShacklesRatio = 40;
    int32 DefDizzinessRatio = 41;
    int32 DefStoneRatio = 42;
    int32 DefFrozenRatio = 43;
    int32 DefSleepRatio = 44;
}
message MonsterValueModel //Monster
{
    int32 id = 1;
    int32 MonsterMode = 2;
    int32 difId = 3;
    int32 Type = 4;
    int32 MonsterLevel = 5;
    int32 Exp = 6;
    int32 Patt = 7;
    int32 Matt = 8;
    int32 PattNodef = 9;
    int32 MattNodef = 10;
    int32 Pdef = 11;
    int32 Mdef = 12;
    float Strength = 13;
    float Intelligence = 14;
    float Power = 15;
    float Spirit = 16;
    int32 MaxHp = 17;
    int32 MaxMp = 18;
    int32 HpAddTime = 19;
    int32 MpAddTime = 20;
    int32 Pcrit = 21;
    int32 Mcrit = 22;
    int32 Hit = 23;
    int32 Dodge = 24;
    int32 EnhanceWind = 25;
    int32 EnhanceThunder = 26;
    int32 EnhanceWater = 27;
    int32 EnhanceFire = 28;
    int32 EnhanceSoil = 29;
    int32 DefWind = 30;
    int32 DefThunder = 31;
    int32 DefWater = 32;
    int32 DefFire = 33;
    int32 DefSoil = 34;
    int32 DefElectricity = 35;
    int32 DefBlood = 36;
    int32 DefBurn = 37;
    int32 DefPoision = 38;
    int32 DefBlind = 39;
    int32 DefChaos = 40;
    int32 DefSlow = 41;
    int32 DefCurse = 42;
    int32 DefShackles = 43;
    int32 DefDizziness = 44;
    int32 DefStone = 45;
    int32 DefFrozen = 46;
    int32 DefSleep = 47;
    int32 Stiff = 48;
}
message MonsterDrop //Monster
{
    int32 id = 1;
    string desc = 2;
    int32 dropID = 3;
    int32 dropTimes = 4;
    int32 refreshType = 5;
}
message GroupPoint //MonsterGroup
{
    int32 id = 1;
    repeated int32 GroupPointID = 2;
}
message GroupValue //MonsterGroup
{
    int32 id = 1;
    int32 Wave = 2;
    int32 MonsterAmount = 3;
    string MonsterName = 4;
    repeated int32 MonsterID = 5;
    int32 ArrangementType = 6;
}
message ArrangementType //MonsterGroup
{
    int32 id = 1;
    int32 ArrangementAmount = 2;
    repeated DTVector2 CoordinateShift = 3;
}
message AbysssRandomMonster //MonsterGroup
{
    int32 id = 1;
    int32 abyssid = 2;
    int32 wave = 3;
    repeated DTMonsterGroupWeight randomMonster = 4;
    repeated DTDropIdFixWeight itemIdfixWeight = 5;
    repeated DTDropQualityFixWeight itemQualityfixWeight = 6;
}
message MonsterTalk //MonsterTalk
{
    int32 id = 1;
    string Contents = 2;
    int32 Rate = 3;
    int32 Life = 4;
    int32 Delay = 5;
    int32 MaxCount = 6;
    int32 BubbleType = 7;
    int32 Disappear = 8;
}
message Msg //Msg
{
    int32 id = 1;
    string key = 2;
    string module = 3;
    string name = 4;
    string zhCnNotice = 5;
    int32 Type = 6;
}
message Marquee //Msg
{
    int32 id = 1;
    string desc = 2;
    string zhCnNotice = 3;
    int32 delayTime = 4;
}
message Text //Msg
{
    int32 id = 1;
    string zhCnContent = 2;
}
message Shop //NewShop
{
    int32 id = 1;
    string shopName = 2;
    int32 sort = 3;
    int32 shopEntrance = 4;
    int32 shopIcon = 5;
    int32 freshMonth = 6;
    int32 freshWeek = 7;
    int32 freshDay = 8;
    string refresh = 9;
    string pageName = 10;
    int32 shopId = 11;
    int32 shopUnlock = 12;
    int32 menuid = 13;
}
message Goods //NewShop
{
    int32 id = 1;
    string goodsName = 2;
    int32 bindType = 3;
    int32 itemId = 4;
    int32 numbers = 5;
    DTAmountOfMoney price = 6;
    DTAmountOfMoney backupPrice = 7;
    repeated int32 limitLevel = 8;
    repeated DTUnlock unlock = 9;
    int32 pageId = 10;
    int32 weight = 11;
    int32 sort = 12;
    int32 type = 13;
    int32 limitNumbers = 14;
    int32 restrictionType = 15;
    repeated int32 Limit = 16;
    int32 recommend = 17;
    int32 discount = 18;
    int32 free = 19;
    repeated DTUnlock unlockBuy = 20;
}
message Pay //Pay
{
    int32 id = 1;
    string zhCnName = 2;
    int32 price = 3;
    DTAmountOfMoney money = 4;
    DTAmountOfMoney firstPay = 5;
}
message PlayerLevel //Player
{
    int32 id = 1;
    int32 playerNeedExp = 2;
    int32 addPower = 3;
    int32 maxPower = 4;
    int32 addSkillPoint = 5;
}
message PlayerName //Player
{
    int32 id = 1;
    string zhCnName1 = 2;
    string zhCnName2 = 3;
    string zhCnName3 = 4;
}
message ExpLevel //Player
{
    int32 id = 1;
    string desc = 2;
    repeated int32 exp = 3;
}
message Property //Property
{
    int32 id = 1;
    string field = 2;
    string zhCnName = 3;
    string des = 4;
    int32 ValueType = 5;
    int32 icon = 6;
    int32 groupType = 7;
    bool visible = 8;
    int32 rank = 9;
    string color = 10;
    int32 min = 11;
    int32 max = 12;
}
message SkillProperty //Property
{
    int32 id = 1;
    string field = 2;
    string zhCnName = 3;
    string des = 4;
    int32 ValueType = 5;
    int32 icon = 6;
    int32 groupType = 7;
    bool visible = 8;
    int32 rank = 9;
    string color = 10;
    int32 min = 11;
    int32 max = 12;
}
message PvpBalanceLevel //Pvp
{
    int32 id = 1;
    int32 HpAdd = 2;
    int32 HpMul = 3;
    int32 DamageAdd = 4;
    int32 DamageMul = 5;
    int32 HitAdd = 6;
}
message PvpBalanceHero //Pvp
{
    int32 id = 1;
    string Name = 2;
    int32 HpMul = 3;
    int32 DamageMul = 4;
    int32 HitAdd = 5;
}
message EquipRefine //Refine
{
    int32 id = 1;
    repeated int32 qualitySection = 2;
    int32 weight = 3;
}
message RefineProperty //Refine
{
    int32 id = 1;
    repeated int32 equipPart = 2;
    DTRefineProperty Patt = 3;
    DTRefineProperty Matt = 4;
    DTRefineProperty FixAtt = 5;
    DTRefineProperty Strength = 6;
    DTRefineProperty Intelligence = 7;
    DTRefineProperty Power = 8;
    DTRefineProperty Spirit = 9;
    DTRefineProperty EnhanceWind = 10;
    DTRefineProperty EnhanceThunder = 11;
    DTRefineProperty EnhanceWater = 12;
    DTRefineProperty EnhanceFire = 13;
    DTRefineProperty EnhanceSoil = 14;
    DTRefineProperty DefWind = 15;
    DTRefineProperty DefThunder = 16;
    DTRefineProperty DefWater = 17;
    DTRefineProperty DefFire = 18;
    DTRefineProperty DefSoil = 19;
    DTRefineProperty DefElectricity = 20;
    DTRefineProperty DefBlood = 21;
    DTRefineProperty DefBurn = 22;
    DTRefineProperty DefPoision = 23;
    DTRefineProperty DefBlind = 24;
    DTRefineProperty DefChaos = 25;
    DTRefineProperty DefSlow = 26;
    DTRefineProperty DefCurse = 27;
    DTRefineProperty DefShackles = 28;
    DTRefineProperty DefDizziness = 29;
    DTRefineProperty DefStone = 30;
    DTRefineProperty DefFrozen = 31;
    DTRefineProperty DefSleep = 32;
    DTRefineProperty DefMonster = 33;
}
message RefineChances //Refine
{
    int32 id = 1;
    repeated int32 range = 2;
    repeated int32 qualitySection = 3;
    int32 type = 4;
    int32 num = 5;
    repeated DTChanceRange chanceRange1 = 6;
    repeated DTChanceRange chanceRange2 = 7;
}
message RefineCost //Refine
{
    int32 id = 1;
    repeated int32 qualitySection = 2;
    DTItemNum costItem = 3;
}
message RefineName //Refine
{
    int32 id = 1;
    int32 lowValue = 2;
    int32 upValue = 3;
    string RefineName = 4;
}
message ScenarioTask //Scenario
{
    int32 id = 1;
    string groupId = 2;
    string dialog = 3;
    string nextGroup = 4;
    int32 contactType = 5;
    int32 dialogType = 6;
    int32 heroPos = 7;
    int32 heroId = 8;
    string name = 9;
    string heroEmo = 10;
    bool skip = 11;
    string dialog1010 = 12;
}
message ScenarioBattle //ScenarioBattle
{
    int32 id = 1;
    string groupId = 2;
    int32 groupType = 3;
    int32 playerId = 4;
    int32 dialogHeroPos = 5;
    string dialog = 6;
    string dialog1010 = 7;
    int32 dialogType = 8;
    string nextGroup = 9;
    string name = 10;
    string heroEmo = 11;
    bool skip = 12;
}
message SceneColorBalance //SceneColorBalance
{
    int32 id = 1;
    string sceneName = 2;
    int32 r = 3;
    int32 g = 4;
    int32 b = 5;
}
message ItemShop //Shop
{
    int32 id = 1;
    DTShopItem itemId = 2;
    string name = 3;
    int32 paging = 4;
    int32 sort = 5;
    int32 bindType = 6;
    DTAmountOfMoney price = 7;
    int32 discount = 8;
    int32 recommend = 9;
    bool free = 10;
    int32 restrictionType = 11;
    DTShopLimit Limit = 12;
    bool secondConfirmation = 13;
    bool shelf = 14;
}
message SystemShop //Shop
{
    int32 id = 1;
    DTShopItem itemId = 2;
    string name = 3;
    int32 systemConfiguration = 4;
    int32 paging = 5;
    int32 sort = 6;
    int32 bindType = 7;
    DTAmountOfMoney price = 8;
    int32 recommend = 9;
    int32 discount = 10;
    bool free = 11;
    int32 restrictionType = 12;
    DTShopLimit Limit = 13;
    bool secondConfirmation = 14;
    bool shelf = 15;
}
message SystemConfiguration //Shop
{
    int32 id = 1;
    string shopName = 2;
    repeated string tabNames = 3;
    int32 menuId = 4;
    int32 resId = 5;
    int32 unlockLevel = 6;
    int32 refreshType = 7;
    int32 sort = 8;
    repeated int32 moneyId = 9;
}
message Passivedrug //Shop
{
    int32 id = 1;
    string zhCnName = 2;
    DTAmountOfMoney drugprice = 3;
    string drugDisplay = 4;
    repeated int32 fieId = 5;
    int32 addType = 6;
    int32 addNum = 7;
    int32 fixedNum = 8;
}
message Skill //Skill
{
    int32 id = 1;
    string name = 2;
    int32 icon = 3;
    repeated int32 JobID = 4;
    repeated string flag = 5;
    int32 video = 6;
    int32 skillUI = 7;
    string EnglishName = 8;
    repeated int32 MechanismIds = 9;
    repeated int32 MechanismIdsPVP = 10;
    repeated int32 PveBuffinfoId = 11;
    repeated int32 PvpBuffinfoId = 12;
    int32 Speed = 13;
    int32 AttackScalePVP = 14;
    repeated int32 BindButtonIndex = 15;
    int32 SpeedEffectType = 16;
    bool SkillType = 17;
    int32 SkillCategory = 18;
    repeated int32 SkillEffect = 19;
    bool IsBuff = 20;
    bool IsRunAttack = 21;
    int32 IsAttackCombo = 22;
    int32 CanUseInPVP = 23;
    bool IsPreJob = 24;
    repeated int32 PreCondition = 25;
    int32 SkillPressType = 26;
    bool IsForce = 27;
    bool IsCanBreak = 28;
    repeated int32 HitInterruptSkills = 29;
    bool PressBackJumpCancel = 30;
    bool IsWalkEnable = 31;
    int32 WalkMode = 32;
    int32 transID = 33;
    int32 SkillSpeech = 34;
    bool IsSwitchWeapon = 35;
    int32 display = 36;
    bool ShowCastBar = 37;
    int32 CastTime = 38;
    int32 grabPreJudgeFrme = 39;
}
message Skillinfo //Skill
{
    int32 id = 1;
    int32 SkillID = 2;
    string name = 3;
    int32 EffectTargetType = 4;
    int32 HasDamage = 5;
    int32 DamageType = 6;
    int32 DistanceType = 7;
    bool IsCanMiss = 8;
    bool HitGrab = 9;
    bool BreakSuperArmor = 10;
    bool BreakBlock = 11;
    int32 ClearTargetState = 12;
    DTPropDamegeGrowth DamageMaxCount = 13;
    DTPropDamegeGrowth RepeatAttackInterval = 14;
    repeated int32 AttachEntity = 15;
    bool CanBreakUp = 16;
    int32 ElementType = 17;
    bool UseOtherElementType = 18;
    int32 GroundFriction = 19;
    int32 Attack = 20;
    DTPropDamegeGrowth FloatingRate = 21;
    int32 HitFloatXForce = 22;
    DTPropDamegeGrowth HitFloatYForce = 23;
    bool IgnoreComboFlag = 24;
    int32 SkillBlockID = 25;
    int32 SkillShakeID = 26;
    int32 Rigidity = 27;
    DTPropDamegeGrowth MaxHurtDistance = 28;
    bool CanAvoidBackAttack = 29;
    int32 BouncedFloatPer = 30;
    int32 EffectId = 31;
    int32 SoundId = 32;
    DTPropDamegeGrowth Penetrate = 33;
}
message SkillDes //Skill
{
    int32 id = 1;
    string name = 2;
    string Description = 3;
    string DataText1 = 4;
    DTPropDamegeGrowth DataNumber1 = 5;
    DTPropDamegeGrowth PVPDataNum1 = 6;
    string DataText2 = 7;
    DTPropDamegeGrowth DataNumber2 = 8;
    DTPropDamegeGrowth PVPDataNum2 = 9;
    string DataText3 = 10;
    DTPropDamegeGrowth DataNumber3 = 11;
    DTPropDamegeGrowth PVPDataNum3 = 12;
    string DataText4 = 13;
    DTPropDamegeGrowth DataNumber4 = 14;
    DTPropDamegeGrowth PVPDataNum4 = 15;
    string DataText5 = 16;
    DTPropDamegeGrowth DataNumber5 = 17;
    DTPropDamegeGrowth PVPDataNum5 = 18;
    string DataText6 = 19;
    DTPropDamegeGrowth DataNumber6 = 20;
    DTPropDamegeGrowth PVPDataNum6 = 21;
    string DataText7 = 22;
    DTPropDamegeGrowth DataNumber7 = 23;
    DTPropDamegeGrowth PVPDataNum7 = 24;
    string DataText8 = 25;
    DTPropDamegeGrowth DataNumber8 = 26;
    DTPropDamegeGrowth PVPDataNum8 = 27;
    string DataText9 = 28;
    DTPropDamegeGrowth DataNumber9 = 29;
    DTPropDamegeGrowth PVPDataNum9 = 30;
    string DataText10 = 31;
    DTPropDamegeGrowth DataNumber10 = 32;
    DTPropDamegeGrowth PVPDataNum10 = 33;
    string DataText11 = 34;
    DTPropDamegeGrowth DataNumber11 = 35;
    DTPropDamegeGrowth PVPDataNum11 = 36;
    string DataText12 = 37;
    DTPropDamegeGrowth DataNumber12 = 38;
    DTPropDamegeGrowth PVPDataNum12 = 39;
}
message SkillEffect //Skill
{
    int32 id = 1;
    int32 SkillID = 2;
    string EffectName = 3;
    DTPropDamegeGrowth PveDmgPer = 4;
    DTPropDamegeGrowth PveDamage = 5;
    DTPropDamegeGrowth PvpDmgPer = 6;
    DTPropDamegeGrowth PvpDamage = 7;
    repeated int32 PveBuffinfoId = 8;
    repeated int32 PvpBuffinfoId = 9;
}
message SkillProp //Skill
{
    int32 id = 1;
    string name = 2;
    DTPropDamegeGrowth HpCost = 3;
    DTPropDamegeGrowth MpCost = 4;
    int32 ItemId = 5;
    DTPropDamegeGrowth ItemCost = 6;
    int32 SkillSpCost = 7;
    int32 CdTriggerType = 8;
    repeated int32 CdPhaseIndexs = 9;
    bool IsReCharge = 10;
    DTPropDamegeGrowth ReChargeNum = 11;
    DTPropDamegeGrowth Cooldown = 12;
    DTPropDamegeGrowth BaseCooldown = 13;
    DTPropDamegeGrowth PvpCooldown = 14;
    DTPropDamegeGrowth PvpBaseCooldown = 15;
    int32 unlockLevel = 16;
    int32 defaultLevel = 17;
    int32 SkillUpInterval = 18;
    int32 upgradeLimit = 19;
    int32 maxLevel = 20;
}
message Skilldisplay //Skill
{
    int32 id = 1;
    repeated int32 heroid = 2;
    int32 line = 3;
    string description = 4;
    repeated int32 skilltodisplay = 5;
}
message SkillAssemble //Skill
{
    int32 id = 1;
    int32 heroId = 2;
    repeated int32 playerLevel = 3;
    repeated int32 pvePriority = 4;
    repeated int32 pveSite = 5;
    repeated int32 pveWeight = 6;
    repeated int32 pvpPriority = 7;
    repeated int32 pvpSite = 8;
    repeated int32 pvpWeight = 9;
}
message SkillUnlock //Skill
{
    int32 id = 1;
    string zhCnName = 2;
    int32 unlcokID = 3;
}
message SkillBlockInfo //Skill
{
    int32 id = 1;
    int32 selfBlockTick = 2;
    int32 targetBlockTick = 3;
}
message Spine //Spine
{
    int32 id = 1;
    string url = 2;
    string offset = 3;
    string offsetParam = 4;
    string scale = 5;
    string scaleParam = 6;
    string pivot = 7;
    string pivotParam = 8;
}
message Summon //Summon
{
    int32 id = 1;
    string Name = 2;
    string Description = 3;
    repeated int32 IdGroup = 4;
    int32 SummonNumber = 5;
    int32 MaxInRoom = 6;
    int32 PostionType = 7;
    repeated int32 Position = 8;
    int32 IgnoreHinder = 9;
    int32 Direction = 10;
    int32 Transparent = 11;
    string EffectID = 12;
    string EffectVanishID = 13;
    int32 SummonAudio = 14;
    int32 SummonVanishAudio = 15;
    float DelayTime = 16;
    float Animation = 17;
    float Level = 18;
    float Camp = 19;
    int32 FollowType = 20;
    int32 ExistTime = 21;
    int32 DeadOn = 22;
    int32 OverMap = 23;
    int32 LastDeadUnit = 24;
}
message SummonProperty //Summon
{
    int32 id = 1;
    string desc = 2;
    int32 MaxHp = 3;
    int32 MaxMp = 4;
    int32 HpAddTime = 5;
    int32 MpAddTime = 6;
    int32 Strength = 7;
    int32 Intelligence = 8;
    int32 Power = 9;
    int32 Spirit = 10;
    int32 Patt = 11;
    int32 Matt = 12;
    int32 FixAtt = 13;
    int32 Pdef = 14;
    int32 Mdef = 15;
    int32 Pcrit = 16;
    int32 Mcrit = 17;
    int32 AttSpeed = 18;
    int32 CastSpeed = 19;
    int32 MoveSpeed = 20;
    int32 Hit = 21;
    int32 Dodge = 22;
    int32 Rigidity = 23;
    int32 Stiff = 24;
    int32 EnhanceWind = 25;
    int32 EnhanceThunder = 26;
    int32 EnhanceWater = 27;
    int32 EnhanceFire = 28;
    int32 EnhanceSoil = 29;
    int32 DefWind = 30;
    int32 DefThunder = 31;
    int32 DefWater = 32;
    int32 DefFire = 33;
    int32 DefSoil = 34;
    int32 DefElectricity = 35;
    int32 DefBlood = 36;
    int32 DefBurn = 37;
    int32 DefPoision = 38;
    int32 DefBlind = 39;
    int32 DefChaos = 40;
    int32 DefSlow = 41;
    int32 DefCurse = 42;
    int32 DefShackles = 43;
    int32 DefDizziness = 44;
    int32 DefStone = 45;
    int32 DefFrozen = 46;
    int32 DefSleep = 47;
    int32 DefMonster = 48;
    int32 PattNodef = 49;
    int32 MattNodef = 50;
    int32 PDamageReducePro = 51;
    int32 PDamageReduceVal = 52;
    int32 MDamageReducePro = 53;
    int32 MDamageReduceVal = 54;
    int32 PcritDamage = 55;
    int32 McritDamage = 56;
    int32 DamagAdd = 57;
    int32 ExtraDamag = 58;
    int32 CurrentHp = 59;
    int32 CurrentMp = 60;
    int32 ElementType = 61;
    int32 allDef = 62;
    int32 AttSpeedPer = 63;
    int32 CastSpeedPer = 64;
    int32 MoveSpeedPer = 65;
    int32 DefAttck = 66;
    int32 FixedExtraDamag = 67;
    int32 FixedDamagAdd = 68;
    int32 FixedDamageReduce = 69;
    int32 DamageReduce = 70;
    int32 RecoverMaxHp = 71;
    int32 RecoverMaxMp = 72;
    int32 RecoverMaxHpPer = 73;
    int32 RecoverMaxMpPer = 74;
    int32 RecoverCurrentHpPer = 75;
    int32 RecoverCurrentMpPer = 76;
    int32 PSkillMPCostReduce = 77;
    int32 MSkillMPCostReduce = 78;
    int32 PskillCDReduce = 79;
    int32 MskillCDReduce = 80;
    int32 CityMoveSpeed = 81;
    int32 CityMoveSpeedPer = 82;
    int32 ReflectDamage = 83;
    int32 FixedReflectDamage = 84;
}
message Classification //Target
{
    int32 id = 1;
    string zhCnName = 2;
    int32 type = 3;
    int32 priority = 4;
}
message Task //Task
{
    int32 id = 1;
    string zhCnTaskName = 2;
    string zhCnTaskBrief1 = 3;
    string zhCnTaskBrief2 = 4;
    int32 taskType = 5;
    int32 taskCondition = 6;
    int32 sort = 7;
    int32 lvMin = 8;
    int32 lvMax = 9;
    int32 career = 10;
    repeated int32 preTaskIds = 11;
    repeated int32 amongTaskIds = 12;
    int32 acceptNpcId = 13;
    int32 autoCommit = 14;
    int32 abandoned = 15;
    bool IsAuto = 16;
    int32 flag = 17;
    repeated int32 equalCondition = 18;
    repeated int32 rangeCondition = 19;
    repeated int32 setCondition = 20;
    int32 target = 21;
    int32 expLevel = 22;
    repeated DTRewardTask reward = 23;
    int32 icon = 24;
}
message TaskActiveReward //Task
{
    int32 id = 1;
    int32 taskType = 2;
    int32 point = 3;
    repeated DTRewardTask reward = 4;
}
message TaskCircular //TaskCircular
{
    int32 id = 1;
    int32 level = 2;
    repeated int32 taskList = 3;
    int32 expS = 4;
    repeated DTRewardTask rewardS = 5;
    int32 expA = 6;
    repeated DTRewardTask rewardA = 7;
    int32 expB = 8;
    repeated DTRewardTask rewardB = 9;
}
message TaskEvent //TaskEvent
{
    int32 id = 1;
    int32 type = 2;
    int32 param1 = 3;
    int32 retrigger = 4;
    int32 isWaitEventend = 5;
    int32 nextDelaytime = 6;
    int32 next = 7;
}
message TeamRelation //Team
{
    int32 id = 1;
    repeated int32 enemyTeamIdList = 2;
}
message Unlock //Unlock
{
    int32 id = 1;
    string zhCnName = 2;
    int32 menuId = 3;
    int32 menuIndexId = 4;
    int32 functionStart = 5;
    int32 showLevel = 6;
    repeated DTUnlock openCondition = 7;
    string message = 8;
    int32 isShow = 9;
    int32 Icon = 10;
    int32 predictionLevel = 11;
    int32 predictioDec = 12;
    int32 predictionContent = 13;
}
message LinkUnlock //Unlock
{
    int32 id = 1;
    int32 menuId = 2;
    int32 menuIndexId = 3;
    int32 functionStart = 4;
    int32 showLevel = 5;
    repeated DTUnlock openCondition = 6;
    string message = 7;
}
message WeaponResSet //Weapon
{
    int32 id = 1;
    string Name = 2;
    int32 LeftWeaponResId = 3;
    int32 RightWeaponResId = 4;
}
message WeaponRes //Weapon
{
    int32 id = 1;
    string Name = 2;
    int32 Tag = 3;
    string HitEffect = 4;
    int32 WavingSound = 5;
    int32 EffectId = 6;
    int32 HitSound = 7;
    int32 MissSound = 8;
    int32 SwitchSound = 9;
    int32 SwitchEffect = 10;
    string ResMatrix = 11;
    string ResSkin = 12;
    string ResTexture = 13;
    string Effect = 14;
    int32 ReinforcementEffectID = 15;
}
message WeaponReinforcementEffect //Weapon
{
    int32 id = 1;
    string Description = 2;
    repeated int32 FlowIntensity = 3;
    repeated DTValue4 FlowRGB = 4;
    repeated int32 FlowSpeed = 5;
    string HaloModel = 6;
    repeated DTValue2 HaloScale = 7;
    repeated DTValue2 HaloOffset = 8;
    repeated DTValue4 HaloRGB = 9;
    repeated int32 HaloSpeed = 10;
    repeated int32 Perturbation = 11;
}
message Global //
{
    int32 ArenaGlobalGlobalRankNum = 1;
    int32 ArenaGlobalQueueStayTimeMax = 2;
    int32 defaultWaitTime = 3;
    int32 minimumMatchedPlayers = 4;
    int32 RankBubbleTime = 5;
    int32 RankBubbleSec = 6;
    int32 ArenaCountdownWaitingTime = 7;
    int32 InitialRank = 8;
    DTDateTime ArenaSeasonBeginTime = 9;
    int32 DailyStageResetTime = 10;
    int32 friendLimit = 11;
    int32 friendLatestLimit = 12;
    int32 blacklistLimit = 13;
    int32 friendApplylimit = 14;
    int32 friendRecommendNum = 15;
    int32 dailyFriendshipLimit = 16;
    int32 friendChatFriendship = 17;
    int32 friendPveFriendship = 18;
    repeated int32 friendshipValInterval = 19;
    repeated string friendshipDesc = 20;
    repeated int32 friendshipAddBuffs = 21;
    repeated int32 qualityOrder = 22;
    string itemColor10 = 23;
    string itemColor20 = 24;
    string itemColor30 = 25;
    string itemColor40 = 26;
    string itemColor50 = 27;
    string itemColor60 = 28;
    string itemQuality10 = 29;
    string itemQuality20 = 30;
    string itemQuality30 = 31;
    string itemQuality40 = 32;
    string itemQuality50 = 33;
    string itemQuality60 = 34;
    int32 prologueId = 35;
    int32 bornPoint = 36;
    int32 everydayUpdateTime = 37;
    string roleNameAutoGen = 38;
    int32 roleNameMaxLength = 39;
    int32 roleNameMinLength = 40;
    bool superAccountSwitch = 41;
    bool roleNameRepated = 42;
    int32 chatGamerMaxCnt = 43;
    int32 chatWorldMaxCnt = 44;
    int32 gamerMailMaxCnt = 45;
    int32 worldMailMaxCnt = 46;
    bool wordCheck = 47;
    string notices = 48;
    int32 PvpMatchTime = 49;
    int32 PvpMatchTime2 = 50;
    bool ChannelMine = 51;
    int32 pvpResultMaxCnt = 52;
    string DefAvatar = 53;
    bool PvpCanReconn = 54;
    repeated DTFixItemNum initItemList = 55;
    string cgVideoPath = 56;
    string worldViewVideoPath = 57;
    int32 onboardDiffId1hero = 58;
    string onboardDiffId1heroSkill = 59;
    int32 onboardDiffId1 = 60;
    int32 onboardDiffId2 = 61;
    int32 expandCareerItemId = 62;
    int32 maxCareerCell = 63;
    int32 perPageCellNum = 64;
    int32 unlockedCareerNum = 65;
    int32 deleteCareerCd = 66;
    int32 preferRoleNum = 67;
    string deleteDefenceTime = 68;
    int32 maxLevel = 69;
    int32 WsmGameDuration = 70;
    int32 strengthenProtect = 71;
    int32 strengthenItem = 72;
    repeated int32 decomposeIcon = 73;
    int32 dailyGoldReceiving = 74;
    int32 dailyGoldSending = 75;
    DTFriendGiveRewards friendGiveRewards = 76;
    repeated int32 expEvaluationAdd = 77;
    repeated int32 expDifficultyAdd = 78;
    repeated int32 expVipAdd = 79;
    int32 expFriendAdd = 80;
    int32 expTeacherAdd = 81;
    int32 expMedicineAdd = 82;
    int32 expTeamAdd = 83;
    int32 awakeningSkills = 84;
    repeated DTRewardTask teamGift = 85;
    int32 teamPower = 86;
    int32 teamMatchMaxTime = 87;
    int32 teamInviteTime = 88;
    int32 teamiInviteNum = 89;
    int32 teamApplyforNum = 90;
    int32 teamApplyforTime = 91;
    int32 teamFluchTime = 92;
    int32 teamShoutCd = 93;
    int32 teamMaxNum = 94;
    int32 teamVoteTime = 95;
    int32 teamRefuseTime = 96;
    int32 teamRecommend = 97;
    int32 teamLevel = 98;
    int32 teamTransferTime = 99;
    int32 rollTime = 100;
    int32 bubbleTime = 101;
    string PlayerHalo = 102;
    string MonsterHalo = 103;
    int32 PKLevel = 104;
    repeated int32 medicineItemList = 105;
    int32 disReconnectionTime = 106;
    string TestQuestionSurvey = 107;
    repeated DTRewardTask TestQuestionSurveyReward = 108;
    int32 NoticeStartTime = 109;
    int32 NoticeOverTime = 110;
    int32 NoticeStopTime = 111;
    int32 NoticeIntervalTime = 112;
    DTPerChapterId PerChapterDeffId = 113;
    int32 StageOverTime = 114;
    int32 StageOverShow = 115;
    float defendboxyDefM = 116;
    float defendboxyDefH = 117;
    float Gravity = 118;
    int32 MoveSpeed = 119;
    int32 maxcardsize = 120;
    int32 defultRigidity = 121;
    int32 minBlockTime = 122;
    int32 maxBlockTime = 123;
    int32 tradeShelvesNum = 124;
    int32 transactionDuration = 125;
    int32 tradeMaxNum = 126;
    int32 tradeTax = 127;
    float tradeFee = 128;
    int32 tradeFeeType = 129;
    int32 tradeShowTime = 130;
    int32 tradePricetop = 131;
    int32 tradePricedown = 132;
    repeated int32 PveItemCost = 133;
    repeated int32 PvpItemCost = 134;
    float LowPercentHP = 135;
    DTItemNum FashionChooseCost = 136;
    int32 chapterItemQuailty = 137;
    int32 strengthenMessageLevel = 138;
    int32 marqueeMoveSpeed = 139;
    int32 marqueeStopTime = 140;
    int32 marqueeDelayTime = 141;
    int32 blockGroundFriction = 142;
    int32 blockAttackX = 143;
    int32 protectTicketCost = 144;
    int32 strengthenDeviceCost = 145;
    int32 strengthenTime = 146;
    float marqueeStepSpeed = 147;
    repeated int32 buffClipPlayOrder = 148;
    repeated int32 buffShaderOrder = 149;
    int32 marqueeUpLimit = 150;
    float pickItemDistance = 151;
    int32 arenaMapId = 152;
    int32 pveSuccessResultAudioID = 153;
    int32 pveDefeatResultAudioID = 154;
    int32 pvpSuccessResultAudioID = 155;
    int32 pvpDefeatResultAudioID = 156;
    int32 pvpTieResultAudioID = 157;
    int32 goldSuccessResultAudioID = 158;
    int32 goldDefeatResultAudioID = 159;
    int32 expSuccessResultAudioID = 160;
    int32 expDefeatResultAudioID = 161;
    int32 grabPreJudgeFrme = 162;
    int32 pvpProtectHpIdle = 163;
    float pvpProtectTimeIdle = 164;
    repeated int32 pvpProtectIdleValue = 165;
    int32 pvpProtectHpAir = 166;
    float pvpProtectTimeAir = 167;
    int32 pvpDamagePerAir = 168;
    int32 pvpWeightAddAir = 169;
    int32 pvpProtectHpLie = 170;
    repeated int32 pvpHpProtectPer = 171;
    int32 pvpDodgeValue = 172;
    int32 pvpStiffValue = 173;
    float pvpProtectTimeDodge = 174;
    int32 pvpBreackProtectTime = 175;
    int32 privateBattleInviteTime = 176;
    int32 privateBattleWaitTime = 177;
    int32 InstantKillHpRate = 178;
    int32 deathEffectFrame = 179;
    int32 deathEffectVelocityLimit = 180;
    int32 deathVelocityX = 181;
    int32 deathVelocityY = 182;
    int32 DefalutEffectId = 183;
    int32 DefalutHitSound = 184;
    int32 privateDiffId = 185;
    repeated int32 elementToBuffState = 186;
    int32 elementAddDamagePer = 187;
    int32 behitFlashWhiteFrame = 188;
    int32 AbyssId = 189;
    int32 AbyssBindId = 190;
    int32 AncientId = 191;
    int32 AncientBindId = 192;
    int32 strengthenTimes1 = 193;
    int32 strengthenTimes11 = 194;
    int32 strengthenTimes12 = 195;
    int32 strengthenTimes13 = 196;
    int32 strengthenTimes14 = 197;
    int32 strengthenTimes15 = 198;
    int32 LeaderBoardLoadLine = 199;
    int32 LeaderBoardRunOff = 200;
    int32 LeaderBoardSyn = 201;
    int32 MailBackPackFull = 202;
    int32 MailFriendsTeamRewards = 203;
    string MailExpiredToast = 204;
    int32 ProParaAttackHpMp = 205;
    int32 ProParaDef = 206;
    int32 ProParaSpeed = 207;
    int32 ProParaHitDodge = 208;
    int32 ProParaCrit = 209;
    int32 ProParaResist = 210;
    string ElementWind = 211;
    string ElementThunder = 212;
    string ElementWater = 213;
    string ElementFire = 214;
    string ElementSoil = 215;
    int32 CustomSkillsPage = 216;
    int32 TransferSkillPosition = 217;
    repeated int32 BuffPos = 218;
    int32 UseSkillItem = 219;
    int32 AttackPos = 220;
    repeated string circulartaskRrewardGrade = 221;
    int32 circulartaskMaxnum = 222;
    DTAmountOfMoney circulartaskRefreshcost = 223;
    int32 circulartaskUnlock = 224;
}
message ConfigMng
{
	Global Global = 1;
    map<int32,Arena> Arena = 2;
    map<int32,CacheTime> CacheTime = 3;
    map<int32,MatchingRange> MatchingRange = 4;
    map<int32,Auction> Auction = 5;
    map<int32,Audio> Audio = 6;
    map<int32,Bgm> Bgm = 7;
    map<int32,AudioBattle> AudioBattle = 8;
    map<int32,BeHitAudio> BeHitAudio = 9;
    map<int32,Avatar> Avatar = 10;
    map<int32,UnitPrefab> UnitPrefab = 11;
    map<int32,Resource> Resource = 12;
    map<int32,WeaponAvatar> WeaponAvatar = 13;
    map<int32,WeaponPrefab> WeaponPrefab = 14;
    map<int32,HaloAvatar> HaloAvatar = 15;
    map<int32,ItemQualityRes> ItemQualityRes = 16;
    map<int32,Bag> Bag = 17;
    map<int32,BalanceHero> BalanceHero = 18;
    map<int32,BalanceBag> BalanceBag = 19;
    map<int32,BattleTips> BattleTips = 20;
    map<int32,Buff> Buff = 21;
    map<int32,BuffInfo> BuffInfo = 22;
    map<int32,CameraShake> CameraShake = 23;
    map<int32,ChapterList> ChapterList = 24;
    map<int32,SectionList> SectionList = 25;
    map<int32,DifficultyList> DifficultyList = 26;
    map<int32,ChapterFun> ChapterFun = 27;
    map<int32,ChapterCon> ChapterCon = 28;
    map<int32,PvpScene> PvpScene = 29;
    map<int32,ChapterReward> ChapterReward = 30;
    map<int32,GamePlay> GamePlay = 31;
    map<int32,AbyssChapter> AbyssChapter = 32;
    map<int32,Abysspillar> Abysspillar = 33;
    map<int32,ChapterRewardGuaranteed> ChapterRewardGuaranteed = 34;
    map<int32,Chat> Chat = 35;
    map<int32,QuickMessage> QuickMessage = 36;
    map<int32,Emoji> Emoji = 37;
    map<int32,NameColor> NameColor = 38;
    map<int32,Description> Description = 39;
    map<int32,DestructibleProp> DestructibleProp = 40;
    map<int32,Dropbackbag> Dropbackbag = 41;
    map<int32,DropAudioEffect> DropAudioEffect = 42;
    map<int32,Effect> Effect = 43;
    map<int32,EnchantCardProp> EnchantCardProp = 44;
    map<int32,EnchantProp> EnchantProp = 45;
    map<int32,EnchantCardCompound> EnchantCardCompound = 46;
    map<int32,EnchantDrop> EnchantDrop = 47;
    map<int32,Entity> Entity = 48;
    map<int32,EntranceShow> EntranceShow = 49;
    map<int32,EquipProp> EquipProp = 50;
    map<int32,EquipSuit> EquipSuit = 51;
    map<int32,Enchantment> Enchantment = 52;
    map<int32,PlaceUnlock> PlaceUnlock = 53;
    map<int32,RandomCost> RandomCost = 54;
    map<int32,Weapontype> Weapontype = 55;
    map<int32,StrengthenItem> StrengthenItem = 56;
    map<int32,Package> Package = 57;
    map<int32,EquipMaster> EquipMaster = 58;
    map<int32,Strengthen> Strengthen = 59;
    map<int32,Strengthen_2> Strengthen_2 = 60;
    map<int32,StrengthenCost> StrengthenCost = 61;
    map<int32,Strengthenprop> Strengthenprop = 62;
    map<int32,StrengthenTicket> StrengthenTicket = 63;
    map<int32,Fashion> Fashion = 64;
    map<int32,FashionAttr> FashionAttr = 65;
    map<int32,FashionProp> FashionProp = 66;
    map<int32,FashionSuit> FashionSuit = 67;
    map<int32,FashionTitle> FashionTitle = 68;
    map<int32,Formula> Formula = 69;
    map<int32,GMBase> GMBase = 70;
    map<int32,GMGroup> GMGroup = 71;
    map<int32,Guide> Guide = 72;
    map<int32,GuidePath> GuidePath = 73;
    map<int32,Hero> Hero = 74;
    map<int32,HeroProp> HeroProp = 75;
    map<int32,Item> Item = 76;
    map<int32,ItemTrade> ItemTrade = 77;
    map<int32,ObtainChannel> ObtainChannel = 78;
    map<int32,Tipsbutton> Tipsbutton = 79;
    map<int32,TipsCombine> TipsCombine = 80;
    map<int32,Money> Money = 81;
    map<int32,Energy> Energy = 82;
    map<int32,TreasureBox> TreasureBox = 83;
    map<int32,Leaderboard> Leaderboard = 84;
    map<int32,Loader> Loader = 85;
    map<int32,Loading> Loading = 86;
    map<int32,LoadingMap> LoadingMap = 87;
    map<int32,LoadingTips> LoadingTips = 88;
    map<int32,Mail> Mail = 89;
    map<int32,MapList> MapList = 90;
    map<int32,MapNodeLink> MapNodeLink = 91;
    map<int32,MapShow> MapShow = 92;
    map<int32,Mechanism> Mechanism = 93;
    map<int32,Menu> Menu = 94;
    map<int32,MenuIndex> MenuIndex = 95;
    map<int32,PopBtn> PopBtn = 96;
    map<int32,Monster> Monster = 97;
    map<int32,MonsterAI> MonsterAI = 98;
    map<int32,Monstervalue> Monstervalue = 99;
    map<int32,MonsterValueModel> MonsterValueModel = 100;
    map<int32,MonsterDrop> MonsterDrop = 101;
    map<int32,GroupPoint> GroupPoint = 102;
    map<int32,GroupValue> GroupValue = 103;
    map<int32,ArrangementType> ArrangementType = 104;
    map<int32,AbysssRandomMonster> AbysssRandomMonster = 105;
    map<int32,MonsterTalk> MonsterTalk = 106;
    map<int32,Msg> Msg = 107;
    map<int32,Marquee> Marquee = 108;
    map<int32,Text> Text = 109;
    map<int32,Shop> Shop = 110;
    map<int32,Goods> Goods = 111;
    map<int32,Pay> Pay = 112;
    map<int32,PlayerLevel> PlayerLevel = 113;
    map<int32,PlayerName> PlayerName = 114;
    map<int32,ExpLevel> ExpLevel = 115;
    map<int32,Property> Property = 116;
    map<int32,SkillProperty> SkillProperty = 117;
    map<int32,PvpBalanceLevel> PvpBalanceLevel = 118;
    map<int32,PvpBalanceHero> PvpBalanceHero = 119;
    map<int32,EquipRefine> EquipRefine = 120;
    map<int32,RefineProperty> RefineProperty = 121;
    map<int32,RefineChances> RefineChances = 122;
    map<int32,RefineCost> RefineCost = 123;
    map<int32,RefineName> RefineName = 124;
    map<int32,ScenarioTask> ScenarioTask = 125;
    map<int32,ScenarioBattle> ScenarioBattle = 126;
    map<int32,SceneColorBalance> SceneColorBalance = 127;
    map<int32,ItemShop> ItemShop = 128;
    map<int32,SystemShop> SystemShop = 129;
    map<int32,SystemConfiguration> SystemConfiguration = 130;
    map<int32,Passivedrug> Passivedrug = 131;
    map<int32,Skill> Skill = 132;
    map<int32,Skillinfo> Skillinfo = 133;
    map<int32,SkillDes> SkillDes = 134;
    map<int32,SkillEffect> SkillEffect = 135;
    map<int32,SkillProp> SkillProp = 136;
    map<int32,Skilldisplay> Skilldisplay = 137;
    map<int32,SkillAssemble> SkillAssemble = 138;
    map<int32,SkillUnlock> SkillUnlock = 139;
    map<int32,SkillBlockInfo> SkillBlockInfo = 140;
    map<int32,Spine> Spine = 141;
    map<int32,Summon> Summon = 142;
    map<int32,SummonProperty> SummonProperty = 143;
    map<int32,Classification> Classification = 144;
    map<int32,Task> Task = 145;
    map<int32,TaskActiveReward> TaskActiveReward = 146;
    map<int32,TaskCircular> TaskCircular = 147;
    map<int32,TaskEvent> TaskEvent = 148;
    map<int32,TeamRelation> TeamRelation = 149;
    map<int32,Unlock> Unlock = 150;
    map<int32,LinkUnlock> LinkUnlock = 151;
    map<int32,WeaponResSet> WeaponResSet = 152;
    map<int32,WeaponRes> WeaponRes = 153;
    map<int32,WeaponReinforcementEffect> WeaponReinforcementEffect = 154;
}

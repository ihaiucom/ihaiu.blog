var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var bigItem_1 = require("./view/bigItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("view/bigItem.ts", bigItem_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/Big.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./view/bigItem":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var BigRank_1 = require("./view/BigRank");
var Main = /** @class */ (function () {
    function Main() {
        //设置子域
        Laya.isWXOpenDataContext = true;
        Laya.isWXPosMsg = true;
        //根据IDE设置初始化引擎		
        Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, false);
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        // 关于透传接口，请参考: https://ldc2.layabox.com/doc/?nav=zh-ts-5-0-7
        if (Laya.Browser.onMiniGame)
            wx.onMessage(function (data) {
                if (data.url == "res/atlas/test.atlas") {
                    Laya.loader.load("res/atlas/test.atlas", Laya.Handler.create(this, this.onComplete));
                }
            }.bind(this));
        else
            Laya.loader.load("res/atlas/test.atlas", Laya.Handler.create(this, this.onComplete));
    }
    Main.prototype.onComplete = function () {
        //初始化rank排行榜
        var rank = new BigRank_1.default();
        //初始化
        rank.init();
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./view/BigRank":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var BigUI = /** @class */ (function (_super) {
            __extends(BigUI, _super);
            function BigUI() {
                return _super.call(this) || this;
            }
            BigUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigUI.uiView);
            };
            BigUI.uiView = { "type": "Scene", "props": { "width": 610, "height": 757 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "test/2.png" }, "compId": 4 }, { "type": "List", "props": { "y": 104, "x": 13, "width": 585, "var": "_list", "vScrollBarSkin": " ", "spaceY": 20, "repeatX": 1, "height": 629, "elasticEnabled": true }, "compId": 3, "child": [{ "type": "bigItem", "props": { "runtime": "view/bigItem.ts", "renderType": "render" }, "compId": 5 }] }], "loadList": ["test/2.png"], "loadList3D": [] };
            return BigUI;
        }(Scene));
        test.BigUI = BigUI;
        REG("ui.test.BigUI", BigUI);
        var BigItemUI = /** @class */ (function (_super) {
            __extends(BigItemUI, _super);
            function BigItemUI() {
                return _super.call(this) || this;
            }
            BigItemUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigItemUI.uiView);
            };
            BigItemUI.uiView = { "type": "View", "props": { "width": 580, "height": 100 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 575, "texture": "test/3.png", "height": 99 }, "compId": 7 }, { "type": "Image", "props": { "y": 6, "x": 22, "width": 80, "var": "img_head", "skin": "test/4.png", "height": 80 }, "compId": 3, "child": [{ "type": "Sprite", "props": { "y": -1, "x": -1, "width": 82, "texture": "test/c1.png", "renderType": "mask", "height": 82 }, "compId": 10 }] }, { "type": "Label", "props": { "y": 38.5, "x": 136, "width": 259, "var": "text_name", "text": "名字", "overflow": "scroll", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" }, "compId": 4 }, { "type": "Label", "props": { "y": 42.5, "x": 496, "var": "text_score", "text": "分数", "fontSize": 20, "color": "#ffffff", "align": "center" }, "compId": 5 }], "loadList": ["test/3.png", "test/4.png", "test/c1.png"], "loadList3D": [] };
            return BigItemUI;
        }(View));
        test.BigItemUI = BigItemUI;
        REG("ui.test.BigItemUI", BigItemUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigRank = /** @class */ (function (_super) {
    __extends(BigRank, _super);
    function BigRank() {
        var _this = _super.call(this) || this;
        /**获取好友排行榜时的key */
        _this._key = 'test10086';
        /**list初始化使用的数据 */
        _this.arr = [
            { index: 1, avatarIP: 'test/4.png', UserName: "测试用户1", RankValue: 100 },
            { index: 2, avatarIP: 'test/4.png', UserName: "测试用户2", RankValue: 75 },
            { index: 3, avatarIP: 'test/4.png', UserName: "测试用户3", RankValue: 50 },
            { index: 4, avatarIP: 'test/4.png', UserName: "测试用户4", RankValue: 25 }
        ];
        return _this;
    }
    /**
     * 初始化
     */
    BigRank.prototype.init = function () {
        Laya.stage.addChild(this);
        //初始化list数据
        this.setlist(this.arr);
        if (Laya.Browser.onMiniGame) {
            //接受来自主域的信息
            wx.onMessage(this.recevieData.bind(this));
            // 直接展示数据
            this.getFriendData();
        }
    };
    /**
     * 获取好友排行
     */
    BigRank.prototype.getFriendData = function () {
        var _$this = this;
        wx.getFriendCloudStorage({
            keyList: [this._key],
            success: function (res) {
                //关于拿到的数据详细情况可以产看微信文档
                //https://developers.weixin.qq.com/minigame/dev/api/UserGameData.html
                var listData;
                var obj;
                var kv;
                var arr = [];
                console.log('-----------------getFriendCloudStorage------------');
                if (res.data) {
                    for (var i = 0; i < res.data.length; i++) {
                        obj = res.data[i];
                        if (!(obj.KVDataList.length))
                            continue;
                        //拉取数据是，使用了多少个key- KVDataList的数组就有多少
                        //更详细的KVData可以查看微信文档:https://developers.weixin.qq.com/minigame/dev/api/KVData.html
                        kv = obj.KVDataList[0];
                        if (kv.key != _$this._key)
                            continue;
                        kv = JSON.parse(kv.value);
                        listData = {};
                        listData.avatarIP = obj.avatarUrl;
                        listData.UserName = obj.nickname;
                        listData.openID = obj.openid;
                        listData.RankValue = kv.wxgame.value1;
                        listData.update_time = kv.wxgame.update_time;
                        arr.push(listData);
                    }
                    //根据RankValue排序
                    arr = arr.sort(function (a, b) {
                        return b.RankValue - a.RankValue;
                    });
                    //增加一个用于查看的index排名
                    for (var i = 0; i < arr.length; i++) {
                        arr[i].index = i + 1;
                    }
                    //设置数组
                    _$this.setlist(arr);
                }
            },
            fail: function (data) {
                console.log('------------------获取托管数据失败--------------------');
                console.log(data);
            }
        });
    };
    /**
     * 接收信息
     * @param message 收到的主域传过来的信息
     */
    BigRank.prototype.recevieData = function (message) {
        var _$this = this;
        var type = message.type;
        switch (type) {
            default:
                break;
        }
    };
    /**
     * 上报自己的数据
     * @param data 上报数据
     */
    BigRank.prototype.setSelfData = function (data) {
        var kvDataList = [];
        var obj = {};
        obj.wxgame = {};
        obj.wxgame.value1 = data;
        obj.wxgame.update_time = Laya.Browser.now();
        kvDataList.push({ "key": this._key, "value": JSON.stringify(obj) });
        wx.setUserCloudStorage({
            KVDataList: kvDataList,
            success: function (e) {
                console.log('-----success:' + JSON.stringify(e));
            },
            fail: function (e) {
                console.log('-----fail:' + JSON.stringify(e));
            },
            complete: function (e) {
                console.log('-----complete:' + JSON.stringify(e));
            }
        });
    };
    /**
     * 设置list arr
     * @param arr 赋值用的arr
     */
    BigRank.prototype.setlist = function (arr) {
        this._list.array = arr;
        this._list.refresh();
    };
    return BigRank;
}(layaMaxUI_1.ui.test.BigUI));
exports.default = BigRank;
},{"../ui/layaMaxUI":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigItem = /** @class */ (function (_super) {
    __extends(BigItem, _super);
    function BigItem() {
        return _super.call(this) || this;
    }
    Object.defineProperty(BigItem.prototype, "dataSource", {
        set: function (value) {
            if (!value)
                return;
            this.img_head.skin = value.avatarIP;
            this.text_name.text = value.UserName;
            this.text_score.text = value.RankValue;
        },
        enumerable: true,
        configurable: true
    });
    return BigItem;
}(layaMaxUI_1.ui.test.BigItemUI));
exports.default = BigItem;
},{"../ui/layaMaxUI":3}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
